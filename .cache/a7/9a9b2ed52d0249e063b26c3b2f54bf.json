{"id":"node_modules/performance-test-runner/lib/suite-console-printer.js","dependencies":[{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\package.json","includedInParent":true,"mtime":1615640902725},{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\package.json","includedInParent":true,"mtime":1603290229801},{"name":"replace-printer","loc":{"line":4,"column":34},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\suite-console-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\lib\\replace-printer.js"},{"name":"./performance-test-runner","loc":{"line":5,"column":42},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\suite-console-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\performance-test-runner.js"},{"name":"./stringify-result-table","loc":{"line":6,"column":41},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\suite-console-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\stringify-result-table.js"},{"name":"./throttle","loc":{"line":7,"column":27},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\suite-console-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\throttle.js"},{"name":"process","parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\performance-test-runner\\lib\\suite-console-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.runAndReport = exports.printSuiteState = void 0;\r\nconst replace_printer_1 = require(\"replace-printer\");\r\nconst performance_test_runner_1 = require(\"./performance-test-runner\");\r\nconst stringify_result_table_1 = require(\"./stringify-result-table\");\r\nconst throttle_1 = require(\"./throttle\");\r\nlet otherIsRunning = false;\r\nconst calcFrameTime = (framerate, defaultFrameRate = 30) => {\r\n    let frameTime;\r\n    if (!Number.isFinite(framerate))\r\n        frameTime = 1000 / defaultFrameRate;\r\n    else if (framerate < 1)\r\n        frameTime = 1000;\r\n    else if (framerate == Infinity)\r\n        frameTime = 0;\r\n    else\r\n        frameTime = 1000 / framerate;\r\n    return frameTime;\r\n};\r\nfunction printSuiteState(suite, { printOnCycle = true, framerate = 30 } = {}, rp = new replace_printer_1.ReplacePrinter()) {\r\n    let { continuesConsole: cc, replaceConsole: rc } = rp;\r\n    let update;\r\n    return new Promise((res, rej) => {\r\n        if (otherIsRunning)\r\n            throw new Error('another suite is being printed at the moment');\r\n        const logState = () => rc.log(stringify_result_table_1.formatResultTable(suite.extractTestResults()));\r\n        update = throttle_1.createThrottle(logState, calcFrameTime(framerate));\r\n        suite.addListener('suite-started', () => update());\r\n        suite.addListener('benchmark-started', () => update());\r\n        if (printOnCycle)\r\n            suite.addListener('benchmark-cycle', () => update());\r\n        suite.addListener('benchmark-error', (err) => (update(), cc.error(err)));\r\n        suite.addListener('benchmark-finished', () => update());\r\n        suite.addListener('suite-error', ({ eventData: error }) => {\r\n            cc.error(error);\r\n            update(true)\r\n                .then(() => rej(error));\r\n        });\r\n        suite.addListener('suite-finished', () => {\r\n            update(true)\r\n                .then(() => res());\r\n        });\r\n    }).finally(() => {\r\n        // TODO create better way to stop all listeners from printing\r\n        rc = cc = null;\r\n        update = () => Promise.resolve();\r\n        otherIsRunning = false;\r\n    });\r\n}\r\nexports.printSuiteState = printSuiteState;\r\nfunction runAndReport(pts = performance_test_runner_1.defaultTestRunner, sp = new replace_printer_1.ReplacePrinter()) {\r\n    return (async () => {\r\n        const logger = printSuiteState(pts, { printOnCycle: true, framerate: 30 });\r\n        await pts.runSuite();\r\n        await logger;\r\n    })()\r\n        .catch(err => {\r\n        let actualError = err;\r\n        if (err.type == 'error')\r\n            actualError = err.message;\r\n        console.error(actualError);\r\n        process.exit(1);\r\n    });\r\n}\r\nexports.runAndReport = runAndReport;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/performance-test-runner/lib/suite-console-printer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/performance-test-runner/lib/suite-console-printer.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.runAndReport = exports.printSuiteState = void 0;\r\nconst replace_printer_1 = require(\"replace-printer\");\r\nconst performance_test_runner_1 = require(\"./performance-test-runner\");\r\nconst stringify_result_table_1 = require(\"./stringify-result-table\");\r\nconst throttle_1 = require(\"./throttle\");\r\nlet otherIsRunning = false;\r\nconst calcFrameTime = (framerate, defaultFrameRate = 30) => {\r\n    let frameTime;\r\n    if (!Number.isFinite(framerate))\r\n        frameTime = 1000 / defaultFrameRate;\r\n    else if (framerate < 1)\r\n        frameTime = 1000;\r\n    else if (framerate == Infinity)\r\n        frameTime = 0;\r\n    else\r\n        frameTime = 1000 / framerate;\r\n    return frameTime;\r\n};\r\nfunction printSuiteState(suite, { printOnCycle = true, framerate = 30 } = {}, rp = new replace_printer_1.ReplacePrinter()) {\r\n    let { continuesConsole: cc, replaceConsole: rc } = rp;\r\n    let update;\r\n    return new Promise((res, rej) => {\r\n        if (otherIsRunning)\r\n            throw new Error('another suite is being printed at the moment');\r\n        const logState = () => rc.log(stringify_result_table_1.formatResultTable(suite.extractTestResults()));\r\n        update = throttle_1.createThrottle(logState, calcFrameTime(framerate));\r\n        suite.addListener('suite-started', () => update());\r\n        suite.addListener('benchmark-started', () => update());\r\n        if (printOnCycle)\r\n            suite.addListener('benchmark-cycle', () => update());\r\n        suite.addListener('benchmark-error', (err) => (update(), cc.error(err)));\r\n        suite.addListener('benchmark-finished', () => update());\r\n        suite.addListener('suite-error', ({ eventData: error }) => {\r\n            cc.error(error);\r\n            update(true)\r\n                .then(() => rej(error));\r\n        });\r\n        suite.addListener('suite-finished', () => {\r\n            update(true)\r\n                .then(() => res());\r\n        });\r\n    }).finally(() => {\r\n        // TODO create better way to stop all listeners from printing\r\n        rc = cc = null;\r\n        update = () => Promise.resolve();\r\n        otherIsRunning = false;\r\n    });\r\n}\r\nexports.printSuiteState = printSuiteState;\r\nfunction runAndReport(pts = performance_test_runner_1.defaultTestRunner, sp = new replace_printer_1.ReplacePrinter()) {\r\n    return (async () => {\r\n        const logger = printSuiteState(pts, { printOnCycle: true, framerate: 30 });\r\n        await pts.runSuite();\r\n        await logger;\r\n    })()\r\n        .catch(err => {\r\n        let actualError = err;\r\n        if (err.type == 'error')\r\n            actualError = err.message;\r\n        console.error(actualError);\r\n        process.exit(1);\r\n    });\r\n}\r\nexports.runAndReport = runAndReport;\r\n"},"lineCount":68}},"error":null,"hash":"fc4852a15cc65676c0fda2f6d51f7822","cacheData":{"env":{}}}