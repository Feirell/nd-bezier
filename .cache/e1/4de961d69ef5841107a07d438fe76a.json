{"id":"node_modules/Benchmark/benchmark.js","dependencies":[{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\package.json","includedInParent":true,"mtime":1615640902725},{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\Benchmark\\package.json","includedInParent":true,"mtime":1598368830594}],"generated":{"js":"var define;\nvar global = arguments[3];\n/*!\n * Benchmark.js <https://benchmarkjs.com/>\n * Copyright 2010-2016 Mathias Bynens <https://mths.be/>\n * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>\n * Modified by John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments. */\n  var undefined;\n\n  /** Used to determine if values are of the language type Object. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `define`. */\n  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect free variable `require`. */\n  var freeRequire = typeof require == 'function' && require;\n\n  /** Used to assign each benchmark an incremented id. */\n  var counter = 0;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Used to detect primitive types. */\n  var rePrimitive = /^(?:boolean|number|string|undefined)$/;\n\n  /** Used to make every compiled test unique. */\n  var uidCounter = 0;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',\n    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',\n    'platform', 'process', 'runtime', 'setTimeout'\n  ];\n\n  /** Used to avoid hz of Infinity. */\n  var divisors = {\n    '1': 4096,\n    '2': 512,\n    '3': 64,\n    '4': 8,\n    '5': 0\n  };\n\n  /**\n   * T-Distribution two-tailed critical values for 95% confidence.\n   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.\n   */\n  var tTable = {\n    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,\n    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,\n    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,\n    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,\n    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,\n    'infinity': 1.96\n  };\n\n  /**\n   * Critical Mann-Whitney U-values for 95% confidence.\n   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.\n   */\n  var uTable = {\n    '5':  [0, 1, 2],\n    '6':  [1, 2, 3, 5],\n    '7':  [1, 3, 5, 6, 8],\n    '8':  [2, 4, 6, 8, 10, 13],\n    '9':  [2, 4, 7, 10, 12, 15, 17],\n    '10': [3, 5, 8, 11, 14, 17, 20, 23],\n    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],\n    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],\n    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],\n    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],\n    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],\n    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],\n    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],\n    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],\n    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],\n    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],\n    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],\n    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],\n    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],\n    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],\n    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],\n    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],\n    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],\n    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],\n    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],\n    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `Benchmark` function using the given `context` object.\n   *\n   * @static\n   * @memberOf Benchmark\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `Benchmark` function.\n   */\n  function runInContext(context) {\n    // Exit early if unable to acquire lodash.\n    var _ = context && context._ || require('lodash') || root._;\n    if (!_) {\n      Benchmark.runInContext = runInContext;\n      return Benchmark;\n    }\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String;\n\n    /** Used for `Array` and `Object` method references. */\n    var arrayRef = [],\n        objectProto = Object.prototype;\n\n    /** Native method shortcuts. */\n    var abs = Math.abs,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        log = Math.log,\n        max = Math.max,\n        min = Math.min,\n        pow = Math.pow,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        shift = arrayRef.shift,\n        slice = arrayRef.slice,\n        sqrt = Math.sqrt,\n        toString = objectProto.toString,\n        unshift = arrayRef.unshift;\n\n    /** Used to avoid inclusion in Browserified bundles. */\n    var req = require;\n\n    /** Detect DOM document object. */\n    var doc = isHostType(context, 'document') && context.document;\n\n    /** Used to access Wade Simmons' Node.js `microtime` module. */\n    var microtimeObject = req('microtime');\n\n    /** Used to access Node.js's high resolution timer. */\n    var processObject = isHostType(context, 'process') && context.process;\n\n    /** Used to prevent a `removeChild` memory leak in IE < 9. */\n    var trash = doc && doc.createElement('div');\n\n    /** Used to integrity check compiled tests. */\n    var uid = 'uid' + _.now();\n\n    /** Used to avoid infinite recursion when methods call each other. */\n    var calledBy = {};\n\n    /**\n     * An object used to flag environments/features.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @type Object\n     */\n    var support = {};\n\n    (function() {\n\n      /**\n       * Detect if running in a browser environment.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');\n\n      /**\n       * Detect if the Timers API exists.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');\n\n      /**\n       * Detect if function decompilation is support.\n       *\n       * @name decompilation\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      try {\n        // Safari 2.x removes commas in object literals from `Function#toString` results.\n        // See http://webk.it/11609 for more details.\n        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.\n        // See http://bugzil.la/559438 for more details.\n        support.decompilation = Function(\n          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')\n          // Avoid issues with code added by Istanbul.\n          .replace(/__cov__[^;]+;/g, '')\n        )()(0).x === '1';\n      } catch(e) {\n        support.decompilation = false;\n      }\n    }());\n\n    /**\n     * Timer object used by `clock()` and `Deferred#resolve`.\n     *\n     * @private\n     * @type Object\n     */\n    var timer = {\n\n      /**\n       * The timer namespace object or constructor.\n       *\n       * @private\n       * @memberOf timer\n       * @type {Function|Object}\n       */\n      'ns': Date,\n\n      /**\n       * Starts the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'start': null, // Lazy defined in `clock()`.\n\n      /**\n       * Stops the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'stop': null // Lazy defined in `clock()`.\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The Benchmark constructor.\n     *\n     * Note: The Benchmark constructor exposes a handful of lodash methods to\n     * make working with arrays, collections, and objects easier. The lodash\n     * methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),\n     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var bench = new Benchmark(fn);\n     *\n     * // or using a name first\n     * var bench = new Benchmark('foo', fn);\n     *\n     * // or with options\n     * var bench = new Benchmark('foo', fn, {\n     *\n     *   // displayed by `Benchmark#toString` if `name` is not available\n     *   'id': 'xyz',\n     *\n     *   // called when the benchmark starts running\n     *   'onStart': onStart,\n     *\n     *   // called after each run cycle\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the benchmark completes running\n     *   'onComplete': onComplete,\n     *\n     *   // compiled/called before the test loop\n     *   'setup': setup,\n     *\n     *   // compiled/called after the test loop\n     *   'teardown': teardown\n     * });\n     *\n     * // or name and options\n     * var bench = new Benchmark('foo', {\n     *\n     *   // a flag to indicate the benchmark is deferred\n     *   'defer': true,\n     *\n     *   // benchmark test function\n     *   'fn': function(deferred) {\n     *     // call `Deferred#resolve` when the deferred test is finished\n     *     deferred.resolve();\n     *   }\n     * });\n     *\n     * // or options only\n     * var bench = new Benchmark({\n     *\n     *   // benchmark name\n     *   'name': 'foo',\n     *\n     *   // benchmark test as a string\n     *   'fn': '[1,2,3,4].sort()'\n     * });\n     *\n     * // a test's `this` binding is set to the benchmark instance\n     * var bench = new Benchmark('foo', function() {\n     *   'My name is '.concat(this.name); // \"My name is foo\"\n     * });\n     */\n    function Benchmark(name, fn, options) {\n      var bench = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(bench instanceof Benchmark)) {\n        return new Benchmark(name, fn, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      }\n      else if (_.isFunction(name)) {\n        // 2 arguments (fn, options).\n        options = fn;\n        fn = name;\n      }\n      else if (_.isPlainObject(fn)) {\n        // 2 arguments (name, options).\n        options = fn;\n        fn = null;\n        bench.name = name;\n      }\n      else {\n        // 3 arguments (name, fn [, options]).\n        bench.name = name;\n      }\n      setOptions(bench, options);\n\n      bench.id || (bench.id = ++counter);\n      bench.fn == null && (bench.fn = fn);\n\n      bench.stats = cloneDeep(bench.stats);\n      bench.times = cloneDeep(bench.times);\n    }\n\n    /**\n     * The Deferred constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object} clone The cloned benchmark instance.\n     */\n    function Deferred(clone) {\n      var deferred = this;\n      if (!(deferred instanceof Deferred)) {\n        return new Deferred(clone);\n      }\n      deferred.benchmark = clone;\n      clock(deferred);\n    }\n\n    /**\n     * The Event constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object|string} type The event type.\n     */\n    function Event(type) {\n      var event = this;\n      if (type instanceof Event) {\n        return type;\n      }\n      return (event instanceof Event)\n        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)\n        : new Event(type);\n    }\n\n    /**\n     * The Suite constructor.\n     *\n     * Note: Each Suite instance has a handful of wrapped lodash methods to\n     * make working with Suites easier. The wrapped lodash methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {string} name A name to identify the suite.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var suite = new Benchmark.Suite;\n     *\n     * // or using a name first\n     * var suite = new Benchmark.Suite('foo');\n     *\n     * // or with options\n     * var suite = new Benchmark.Suite('foo', {\n     *\n     *   // called when the suite starts running\n     *   'onStart': onStart,\n     *\n     *   // called between running benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the suite completes running\n     *   'onComplete': onComplete\n     * });\n     */\n    function Suite(name, options) {\n      var suite = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(suite instanceof Suite)) {\n        return new Suite(name, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      } else {\n        // 2 arguments (name [, options]).\n        suite.name = name;\n      }\n      setOptions(suite, options);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A specialized version of `_.cloneDeep` which only clones arrays and plain\n     * objects assigning all other values by reference.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @returns {*} The cloned value.\n     */\n    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {\n      // Only clone primitives, arrays, and plain objects.\n      if (!_.isArray(value) && !_.isPlainObject(value)) {\n        return value;\n      }\n    });\n\n    /**\n     * Creates a function from the given arguments string and body.\n     *\n     * @private\n     * @param {string} args The comma separated function arguments.\n     * @param {string} body The function body.\n     * @returns {Function} The new function.\n     */\n    function createFunction() {\n      // Lazy define.\n      createFunction = function(args, body) {\n        var result,\n            anchor = freeDefine ? freeDefine.amd : Benchmark,\n            prop = uid + 'createFunction';\n\n        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');\n        result = anchor[prop];\n        delete anchor[prop];\n        return result;\n      };\n      // Fix JaegerMonkey bug.\n      // For more information see http://bugzil.la/639720.\n      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;\n      return createFunction.apply(null, arguments);\n    }\n\n    /**\n     * Delay the execution of a function based on the benchmark's `delay` property.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} fn The function to execute.\n     */\n    function delay(bench, fn) {\n      bench._timerId = _.delay(fn, bench.delay * 1e3);\n    }\n\n    /**\n     * Destroys the given element.\n     *\n     * @private\n     * @param {Element} element The element to destroy.\n     */\n    function destroyElement(element) {\n      trash.appendChild(element);\n      trash.innerHTML = '';\n    }\n\n    /**\n     * Gets the name of the first argument from a function's source.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The argument name.\n     */\n    function getFirstArgument(fn) {\n      return (!_.has(fn, 'toString') &&\n        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';\n    }\n\n    /**\n     * Computes the arithmetic mean of a sample.\n     *\n     * @private\n     * @param {Array} sample The sample.\n     * @returns {number} The mean.\n     */\n    function getMean(sample) {\n      return (_.reduce(sample, function(sum, x) {\n        return sum + x;\n      }) / sample.length) || 0;\n    }\n\n    /**\n     * Gets the source code of a function.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The function's source code.\n     */\n    function getSource(fn) {\n      var result = '';\n      if (isStringable(fn)) {\n        result = String(fn);\n      } else if (support.decompilation) {\n        // Escape the `{` for Firefox 1.\n        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);\n      }\n      // Trim string.\n      result = (result || '').replace(/^\\s+|\\s+$/g, '');\n\n      // Detect strings containing only the \"use strict\" directive.\n      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)\n        ? ''\n        : result;\n    }\n\n    /**\n     * Checks if an object is of the specified class.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {string} name The name of the class.\n     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.\n     */\n    function isClassOf(value, name) {\n      return value != null && toString.call(value) == '[object ' + name + ']';\n    }\n\n    /**\n     * Host objects can return type values that are different from their actual\n     * data type. The objects we are concerned with usually return non-primitive\n     * types of \"object\", \"function\", or \"unknown\".\n     *\n     * @private\n     * @param {*} object The owner of the property.\n     * @param {string} property The property to check.\n     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n     */\n    function isHostType(object, property) {\n      if (object == null) {\n        return false;\n      }\n      var type = typeof object[property];\n      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);\n    }\n\n    /**\n     * Checks if a value can be safely coerced to a string.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.\n     */\n    function isStringable(value) {\n      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));\n    }\n\n    /**\n     * A wrapper around `require` to suppress `module missing` errors.\n     *\n     * @private\n     * @param {string} id The module id.\n     * @returns {*} The exported module or `null`.\n     */\n    function require(id) {\n      try {\n        var result = freeExports && freeRequire(id);\n      } catch(e) {}\n      return result || null;\n    }\n\n    /**\n     * Runs a snippet of JavaScript via script injection.\n     *\n     * @private\n     * @param {string} code The code to run.\n     */\n    function runScript(code) {\n      var anchor = freeDefine ? define.amd : Benchmark,\n          script = doc.createElement('script'),\n          sibling = doc.getElementsByTagName('script')[0],\n          parent = sibling.parentNode,\n          prop = uid + 'runScript',\n          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';\n\n      // Firefox 2.0.0.2 cannot use script injection as intended because it executes\n      // asynchronously, but that's OK because script injection is only used to avoid\n      // the previously commented JaegerMonkey bug.\n      try {\n        // Remove the inserted script *before* running the code to avoid differences\n        // in the expected script element count/order of the document.\n        script.appendChild(doc.createTextNode(prefix + code));\n        anchor[prop] = function() { destroyElement(script); };\n      } catch(e) {\n        parent = parent.cloneNode(false);\n        sibling = null;\n        script.text = code;\n      }\n      parent.insertBefore(script, sibling);\n      delete anchor[prop];\n    }\n\n    /**\n     * A helper function for setting options/event handlers.\n     *\n     * @private\n     * @param {Object} object The benchmark or suite instance.\n     * @param {Object} [options={}] Options object.\n     */\n    function setOptions(object, options) {\n      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));\n\n      _.forOwn(options, function(value, key) {\n        if (value != null) {\n          // Add event listeners.\n          if (/^on[A-Z]/.test(key)) {\n            _.each(key.split(' '), function(key) {\n              object.on(key.slice(2).toLowerCase(), value);\n            });\n          } else if (!_.has(object, key)) {\n            object[key] = cloneDeep(value);\n          }\n        }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Handles cycling/completing the deferred benchmark.\n     *\n     * @memberOf Benchmark.Deferred\n     */\n    function resolve() {\n      var deferred = this,\n          clone = deferred.benchmark,\n          bench = clone._original;\n\n      if (bench.aborted) {\n        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.\n        deferred.teardown();\n        clone.running = false;\n        cycle(deferred);\n      }\n      else if (++deferred.cycles < clone.count) {\n        clone.compiled.call(deferred, context, timer);\n      }\n      else {\n        timer.stop(deferred);\n        deferred.teardown();\n        delay(clone, function() { cycle(deferred); });\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A generic `Array#filter` like method.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} array The array to iterate over.\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Array} A new array of values that passed callback filter.\n     * @example\n     *\n     * // get odd numbers\n     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n     *   return n % 2;\n     * }); // -> [1, 3, 5];\n     *\n     * // get fastest benchmarks\n     * Benchmark.filter(benches, 'fastest');\n     *\n     * // get slowest benchmarks\n     * Benchmark.filter(benches, 'slowest');\n     *\n     * // get benchmarks that completed without erroring\n     * Benchmark.filter(benches, 'successful');\n     */\n    function filter(array, callback) {\n      if (callback === 'successful') {\n        // Callback to exclude those that are errored, unrun, or have hz of Infinity.\n        callback = function(bench) {\n          return bench.cycles && _.isFinite(bench.hz) && !bench.error;\n        };\n      }\n      else if (callback === 'fastest' || callback === 'slowest') {\n        // Get successful, sort by period + margin of error, and filter fastest/slowest.\n        var result = filter(array, 'successful').sort(function(a, b) {\n          a = a.stats; b = b.stats;\n          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);\n        });\n\n        return _.filter(result, function(bench) {\n          return result[0].compare(bench) == 0;\n        });\n      }\n      return _.filter(array, callback);\n    }\n\n    /**\n     * Converts a number to a more readable comma-separated string representation.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {number} number The number to convert.\n     * @returns {string} The more readable string representation.\n     */\n    function formatNumber(number) {\n      number = String(number).split('.');\n      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +\n        (number[1] ? '.' + number[1] : '');\n    }\n\n    /**\n     * Invokes a method on all items in an array.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} benches Array of benchmarks to iterate over.\n     * @param {Object|string} name The name of the method to invoke OR options object.\n     * @param {...*} [args] Arguments to invoke the method with.\n     * @returns {Array} A new array of values returned from each method invoked.\n     * @example\n     *\n     * // invoke `reset` on all benchmarks\n     * Benchmark.invoke(benches, 'reset');\n     *\n     * // invoke `emit` with arguments\n     * Benchmark.invoke(benches, 'emit', 'complete', listener);\n     *\n     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n     * Benchmark.invoke(benches, {\n     *\n     *   // invoke the `run` method\n     *   'name': 'run',\n     *\n     *   // pass a single argument\n     *   'args': true,\n     *\n     *   // treat as queue, removing benchmarks from front of `benches` until empty\n     *   'queued': true,\n     *\n     *   // called before any benchmarks have been invoked.\n     *   'onStart': onStart,\n     *\n     *   // called between invoking benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called after all benchmarks have been invoked.\n     *   'onComplete': onComplete\n     * });\n     */\n    function invoke(benches, name) {\n      var args,\n          bench,\n          queued,\n          index = -1,\n          eventProps = { 'currentTarget': benches },\n          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },\n          result = _.toArray(benches);\n\n      /**\n       * Invokes the method of the current object and if synchronous, fetches the next.\n       */\n      function execute() {\n        var listeners,\n            async = isAsync(bench);\n\n        if (async) {\n          // Use `getNext` as the first listener.\n          bench.on('complete', getNext);\n          listeners = bench.events.complete;\n          listeners.splice(0, 0, listeners.pop());\n        }\n        // Execute method.\n        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;\n        // If synchronous return `true` until finished.\n        return !async && getNext();\n      }\n\n      /**\n       * Fetches the next bench or executes `onComplete` callback.\n       */\n      function getNext(event) {\n        var cycleEvent,\n            last = bench,\n            async = isAsync(last);\n\n        if (async) {\n          last.off('complete', getNext);\n          last.emit('complete');\n        }\n        // Emit \"cycle\" event.\n        eventProps.type = 'cycle';\n        eventProps.target = last;\n        cycleEvent = Event(eventProps);\n        options.onCycle.call(benches, cycleEvent);\n\n        // Choose next benchmark if not exiting early.\n        if (!cycleEvent.aborted && raiseIndex() !== false) {\n          bench = queued ? benches[0] : result[index];\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          }\n          else if (async) {\n            // Resume execution if previously asynchronous but now synchronous.\n            while (execute()) {}\n          }\n          else {\n            // Continue synchronous execution.\n            return true;\n          }\n        } else {\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // When used as a listener `event.aborted = true` will cancel the rest of\n        // the \"complete\" listeners because they were already called above and when\n        // used as part of `getNext` the `return false` will exit the execution while-loop.\n        if (event) {\n          event.aborted = true;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Checks if invoking `Benchmark#run` with asynchronous cycles.\n       */\n      function isAsync(object) {\n        // Avoid using `instanceof` here because of IE memory leak issues with host objects.\n        var async = args[0] && args[0].async;\n        return name == 'run' && (object instanceof Benchmark) &&\n          ((async == null ? object.options.async : async) && support.timeout || object.defer);\n      }\n\n      /**\n       * Raises `index` to the next defined index or returns `false`.\n       */\n      function raiseIndex() {\n        index++;\n\n        // If queued remove the previous bench.\n        if (queued && index > 0) {\n          shift.call(benches);\n        }\n        // If we reached the last index then return `false`.\n        return (queued ? benches.length : index < result.length)\n          ? index\n          : (index = false);\n      }\n      // Juggle arguments.\n      if (_.isString(name)) {\n        // 2 arguments (array, name).\n        args = slice.call(arguments, 2);\n      } else {\n        // 2 arguments (array, options).\n        options = _.assign(options, name);\n        name = options.name;\n        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];\n        queued = options.queued;\n      }\n      // Start iterating over the array.\n      if (raiseIndex() !== false) {\n        // Emit \"start\" event.\n        bench = result[index];\n        eventProps.type = 'start';\n        eventProps.target = bench;\n        options.onStart.call(benches, Event(eventProps));\n\n        // End early if the suite was aborted in an \"onStart\" listener.\n        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {\n          // Emit \"cycle\" event.\n          eventProps.type = 'cycle';\n          options.onCycle.call(benches, Event(eventProps));\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // Start method execution.\n        else {\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          } else {\n            while (execute()) {}\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a string of joined array values or object key-value pairs.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array|Object} object The object to operate on.\n     * @param {string} [separator1=','] The separator used between key-value pairs.\n     * @param {string} [separator2=': '] The separator used between keys and values.\n     * @returns {string} The joined result.\n     */\n    function join(object, separator1, separator2) {\n      var result = [],\n          length = (object = Object(object)).length,\n          arrayLike = length === length >>> 0;\n\n      separator2 || (separator2 = ': ');\n      _.each(object, function(value, key) {\n        result.push(arrayLike ? value : key + separator2 + value);\n      });\n      return result.join(separator1 || ',');\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts all benchmarks in the suite.\n     *\n     * @name abort\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function abortSuite() {\n      var event,\n          suite = this,\n          resetting = calledBy.resetSuite;\n\n      if (suite.running) {\n        event = Event('abort');\n        suite.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abortSuite = true;\n          suite.reset();\n          delete calledBy.abortSuite;\n\n          if (!resetting) {\n            suite.aborted = true;\n            invoke(suite, 'abort');\n          }\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Adds a test to the benchmark suite.\n     *\n     * @memberOf Benchmark.Suite\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.add(fn);\n     *\n     * // or using a name first\n     * suite.add('foo', fn);\n     *\n     * // or with options\n     * suite.add('foo', fn, {\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or name and options\n     * suite.add('foo', {\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or options only\n     * suite.add({\n     *   'name': 'foo',\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     */\n    function add(name, fn, options) {\n      var suite = this,\n          bench = new Benchmark(name, fn, options),\n          event = Event({ 'type': 'add', 'target': bench });\n\n      if (suite.emit(event), !event.cancelled) {\n        suite.push(bench);\n      }\n      return suite;\n    }\n\n    /**\n     * Creates a new suite with cloned benchmarks.\n     *\n     * @name clone\n     * @memberOf Benchmark.Suite\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new suite instance.\n     */\n    function cloneSuite(options) {\n      var suite = this,\n          result = new suite.constructor(_.assign({}, suite.options, options));\n\n      // Copy own properties.\n      _.forOwn(suite, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = _.isFunction(_.get(value, 'clone'))\n            ? value.clone()\n            : cloneDeep(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * An `Array#filter` like method.\n     *\n     * @name filter\n     * @memberOf Benchmark.Suite\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Object} A new suite of benchmarks that passed callback filter.\n     */\n    function filterSuite(callback) {\n      var suite = this,\n          result = new suite.constructor(suite.options);\n\n      result.push.apply(result, filter(suite, callback));\n      return result;\n    }\n\n    /**\n     * Resets all benchmarks in the suite.\n     *\n     * @name reset\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function resetSuite() {\n      var event,\n          suite = this,\n          aborting = calledBy.abortSuite;\n\n      if (suite.running && !aborting) {\n        // No worries, `resetSuite()` is called within `abortSuite()`.\n        calledBy.resetSuite = true;\n        suite.abort();\n        delete calledBy.resetSuite;\n      }\n      // Reset if the state has changed.\n      else if ((suite.aborted || suite.running) &&\n          (suite.emit(event = Event('reset')), !event.cancelled)) {\n        suite.aborted = suite.running = false;\n        if (!aborting) {\n          invoke(suite, 'reset');\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Runs the suite.\n     *\n     * @name run\n     * @memberOf Benchmark.Suite\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.run();\n     *\n     * // or with options\n     * suite.run({ 'async': true, 'queued': true });\n     */\n    function runSuite(options) {\n      var suite = this;\n\n      suite.reset();\n      suite.running = true;\n      options || (options = {});\n\n      invoke(suite, {\n        'name': 'run',\n        'args': options,\n        'queued': options.queued,\n        'onStart': function(event) {\n          suite.emit(event);\n        },\n        'onCycle': function(event) {\n          var bench = event.target;\n          if (bench.error) {\n            suite.emit({ 'type': 'error', 'target': bench });\n          }\n          suite.emit(event);\n          event.aborted = suite.aborted;\n        },\n        'onComplete': function(event) {\n          suite.running = false;\n          suite.emit(event);\n        }\n      });\n      return suite;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Executes all registered listeners of the specified event type.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {Object|string} type The event type or object.\n     * @param {...*} [args] Arguments to invoke the listener with.\n     * @returns {*} Returns the return value of the last listener executed.\n     */\n    function emit(type) {\n      var listeners,\n          object = this,\n          event = Event(type),\n          events = object.events,\n          args = (arguments[0] = event, arguments);\n\n      event.currentTarget || (event.currentTarget = object);\n      event.target || (event.target = object);\n      delete event.result;\n\n      if (events && (listeners = _.has(events, event.type) && events[event.type])) {\n        _.each(listeners.slice(), function(listener) {\n          if ((event.result = listener.apply(object, args)) === false) {\n            event.cancelled = true;\n          }\n          return !event.aborted;\n        });\n      }\n      return event.result;\n    }\n\n    /**\n     * Returns an array of event listeners for a given type that can be manipulated\n     * to add or remove listeners.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @returns {Array} The listeners array.\n     */\n    function listeners(type) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      return _.has(events, type) ? events[type] : (events[type] = []);\n    }\n\n    /**\n     * Unregisters a listener for the specified event type(s),\n     * or unregisters all listeners for the specified event type(s),\n     * or unregisters all listeners for all event types.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} [type] The event type.\n     * @param {Function} [listener] The function to unregister.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // unregister a listener for an event type\n     * bench.off('cycle', listener);\n     *\n     * // unregister a listener for multiple event types\n     * bench.off('start cycle', listener);\n     *\n     * // unregister all listeners for an event type\n     * bench.off('cycle');\n     *\n     * // unregister all listeners for multiple event types\n     * bench.off('start cycle complete');\n     *\n     * // unregister all listeners for all event types\n     * bench.off();\n     */\n    function off(type, listener) {\n      var object = this,\n          events = object.events;\n\n      if (!events) {\n        return object;\n      }\n      _.each(type ? type.split(' ') : events, function(listeners, type) {\n        var index;\n        if (typeof listeners == 'string') {\n          type = listeners;\n          listeners = _.has(events, type) && events[type];\n        }\n        if (listeners) {\n          if (listener) {\n            index = _.indexOf(listeners, listener);\n            if (index > -1) {\n              listeners.splice(index, 1);\n            }\n          } else {\n            listeners.length = 0;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * Registers a listener for the specified event type(s).\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @param {Function} listener The function to register.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // register a listener for an event type\n     * bench.on('cycle', listener);\n     *\n     * // register a listener for multiple event types\n     * bench.on('start cycle', listener);\n     */\n    function on(type, listener) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      _.each(type.split(' '), function(type) {\n        (_.has(events, type)\n          ? events[type]\n          : (events[type] = [])\n        ).push(listener);\n      });\n      return object;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts the benchmark without recording times.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function abort() {\n      var event,\n          bench = this,\n          resetting = calledBy.reset;\n\n      if (bench.running) {\n        event = Event('abort');\n        bench.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abort = true;\n          bench.reset();\n          delete calledBy.abort;\n\n          if (support.timeout) {\n            clearTimeout(bench._timerId);\n            delete bench._timerId;\n          }\n          if (!resetting) {\n            bench.aborted = true;\n            bench.running = false;\n          }\n        }\n      }\n      return bench;\n    }\n\n    /**\n     * Creates a new benchmark using the same test and options.\n     *\n     * @memberOf Benchmark\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new benchmark instance.\n     * @example\n     *\n     * var bizarro = bench.clone({\n     *   'name': 'doppelganger'\n     * });\n     */\n    function clone(options) {\n      var bench = this,\n          result = new bench.constructor(_.assign({}, bench, options));\n\n      // Correct the `options` object.\n      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));\n\n      // Copy own custom properties.\n      _.forOwn(bench, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = cloneDeep(value);\n        }\n      });\n\n      return result;\n    }\n\n    /**\n     * Determines if a benchmark is faster than another.\n     *\n     * @memberOf Benchmark\n     * @param {Object} other The benchmark to compare.\n     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.\n     */\n    function compare(other) {\n      var bench = this;\n\n      // Exit early if comparing the same benchmark.\n      if (bench == other) {\n        return 0;\n      }\n      var critical,\n          zStat,\n          sample1 = bench.stats.sample,\n          sample2 = other.stats.sample,\n          size1 = sample1.length,\n          size2 = sample2.length,\n          maxSize = max(size1, size2),\n          minSize = min(size1, size2),\n          u1 = getU(sample1, sample2),\n          u2 = getU(sample2, sample1),\n          u = min(u1, u2);\n\n      function getScore(xA, sampleB) {\n        return _.reduce(sampleB, function(total, xB) {\n          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);\n        }, 0);\n      }\n\n      function getU(sampleA, sampleB) {\n        return _.reduce(sampleA, function(total, xA) {\n          return total + getScore(xA, sampleB);\n        }, 0);\n      }\n\n      function getZ(u) {\n        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);\n      }\n      // Reject the null hypothesis the two samples come from the\n      // same population (i.e. have the same median) if...\n      if (size1 + size2 > 30) {\n        // ...the z-stat is greater than 1.96 or less than -1.96\n        // http://www.statisticslectures.com/topics/mannwhitneyu/\n        zStat = getZ(u);\n        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;\n      }\n      // ...the U value is less than or equal the critical U value.\n      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];\n      return u <= critical ? (u == u1 ? 1 : -1) : 0;\n    }\n\n    /**\n     * Reset properties and abort if running.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function reset() {\n      var bench = this;\n      if (bench.running && !calledBy.abort) {\n        // No worries, `reset()` is called within `abort()`.\n        calledBy.reset = true;\n        bench.abort();\n        delete calledBy.reset;\n        return bench;\n      }\n      var event,\n          index = 0,\n          changes = [],\n          queue = [];\n\n      // A non-recursive solution to check if properties have changed.\n      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.\n      var data = {\n        'destination': bench,\n        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))\n      };\n\n      do {\n        _.forOwn(data.source, function(value, key) {\n          var changed,\n              destination = data.destination,\n              currValue = destination[key];\n\n          // Skip pseudo private properties and event listeners.\n          if (/^_|^events$|^on[A-Z]/.test(key)) {\n            return;\n          }\n          if (_.isObjectLike(value)) {\n            if (_.isArray(value)) {\n              // Check if an array value has changed to a non-array value.\n              if (!_.isArray(currValue)) {\n                changed = true;\n                currValue = [];\n              }\n              // Check if an array has changed its length.\n              if (currValue.length != value.length) {\n                changed = true;\n                currValue = currValue.slice(0, value.length);\n                currValue.length = value.length;\n              }\n            }\n            // Check if an object has changed to a non-object value.\n            else if (!_.isObjectLike(currValue)) {\n              changed = true;\n              currValue = {};\n            }\n            // Register a changed object.\n            if (changed) {\n              changes.push({ 'destination': destination, 'key': key, 'value': currValue });\n            }\n            queue.push({ 'destination': currValue, 'source': value });\n          }\n          // Register a changed primitive.\n          else if (!_.eq(currValue, value) && value !== undefined) {\n            changes.push({ 'destination': destination, 'key': key, 'value': value });\n          }\n        });\n      }\n      while ((data = queue[index++]));\n\n      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.\n      if (changes.length &&\n          (bench.emit(event = Event('reset')), !event.cancelled)) {\n        _.each(changes, function(data) {\n          data.destination[data.key] = data.value;\n        });\n      }\n      return bench;\n    }\n\n    /**\n     * Displays relevant benchmark information when coerced to a string.\n     *\n     * @name toString\n     * @memberOf Benchmark\n     * @returns {string} A string representation of the benchmark instance.\n     */\n    function toStringBench() {\n      var bench = this,\n          error = bench.error,\n          hz = bench.hz,\n          id = bench.id,\n          stats = bench.stats,\n          size = stats.sample.length,\n          pm = '\\xb1',\n          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');\n\n      if (error) {\n        var errorStr;\n        if (!_.isObject(error)) {\n          errorStr = String(error);\n        } else if (!_.isError(Error)) {\n          errorStr = join(error);\n        } else {\n          // Error#name and Error#message properties are non-enumerable.\n          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));\n        }\n        result += ': ' + errorStr;\n      }\n      else {\n        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +\n          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clocks the time taken to execute a test per cycle (secs).\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @returns {number} The time taken.\n     */\n    function clock() {\n      var options = Benchmark.options,\n          templateData = {},\n          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];\n\n      // Lazy define for hi-res timers.\n      clock = function(clone) {\n        var deferred;\n\n        if (clone instanceof Deferred) {\n          deferred = clone;\n          clone = deferred.benchmark;\n        }\n        var bench = clone._original,\n            stringable = isStringable(bench.fn),\n            count = bench.count = clone.count,\n            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),\n            id = bench.id,\n            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),\n            result = 0;\n\n        // Init `minTime` if needed.\n        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);\n\n        // Compile in setup/teardown functions and the test loop.\n        // Create a new compiled test, instead of using the cached `bench.compiled`,\n        // to avoid potential engine optimizations enabled over the life of the test.\n        var funcBody = deferred\n          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +\n            // When `deferred.cycles` is `0` then...\n            'if(!d#.cycles){' +\n            // set `deferred.fn`,\n            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +\n            // set `deferred.teardown`,\n            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +\n            // execute the benchmark's `setup`,\n            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +\n            // start timer,\n            't#.start(d#);' +\n            // and then execute `deferred.fn` and return a dummy object.\n            '}d#.fn();return{uid:\"${uid}\"}'\n\n          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +\n            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';\n\n        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),\n            isEmpty = !(templateData.fn || stringable);\n\n        try {\n          if (isEmpty) {\n            // Firefox may remove dead code from `Function#toString` results.\n            // For more information see http://bugzil.la/536085.\n            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');\n          }\n          else if (!deferred) {\n            // Pretest to determine if compiled code exits early, usually by a\n            // rogue `return` statement, by checking for a return object with the uid.\n            bench.count = 1;\n            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;\n            bench.count = count;\n          }\n        } catch(e) {\n          compiled = null;\n          clone.error = e || new Error(String(e));\n          bench.count = count;\n        }\n        // Fallback when a test exits early or errors during pretest.\n        if (!compiled && !deferred && !isEmpty) {\n          funcBody = (\n            stringable || (decompilable && !clone.error)\n              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'\n              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'\n            ) +\n            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +\n            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';\n\n          compiled = createCompiled(bench, decompilable, deferred, funcBody);\n\n          try {\n            // Pretest one more time to check for errors.\n            bench.count = 1;\n            compiled.call(bench, context, timer);\n            bench.count = count;\n            delete clone.error;\n          }\n          catch(e) {\n            bench.count = count;\n            if (!clone.error) {\n              clone.error = e || new Error(String(e));\n            }\n          }\n        }\n        // If no errors run the full test loop.\n        if (!clone.error) {\n          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);\n          result = compiled.call(deferred || bench, context, timer).elapsed;\n        }\n        return result;\n      };\n\n      /*----------------------------------------------------------------------*/\n\n      /**\n       * Creates a compiled function from the given function `body`.\n       */\n      function createCompiled(bench, decompilable, deferred, body) {\n        var fn = bench.fn,\n            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';\n\n        templateData.uid = uid + uidCounter++;\n\n        _.assign(templateData, {\n          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),\n          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),\n          'fnArg': fnArg,\n          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')\n        });\n\n        // Use API of chosen timer.\n        if (timer.unit == 'ns') {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#()'),\n            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')\n          });\n        }\n        else if (timer.unit == 'us') {\n          if (timer.ns.stop) {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#.start()'),\n              'end': interpolate('r#=n#.microseconds()/1e6')\n            });\n          } else {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#()'),\n              'end': interpolate('r#=(n#()-s#)/1e6')\n            });\n          }\n        }\n        else if (timer.ns.now) {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#.now()'),\n            'end': interpolate('r#=(n#.now()-s#)/1e3')\n          });\n        }\n        else {\n          _.assign(templateData, {\n            'begin': interpolate('s#=new n#().getTime()'),\n            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')\n          });\n        }\n        // Define `timer` methods.\n        timer.start = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')\n        );\n\n        timer.stop = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')\n        );\n\n        // Create compiled test.\n        return createFunction(\n          interpolate('window,t#'),\n          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +\n          interpolate(body)\n        );\n      }\n\n      /**\n       * Gets the current timer's minimum resolution (secs).\n       */\n      function getRes(unit) {\n        var measured,\n            begin,\n            count = 30,\n            divisor = 1e3,\n            ns = timer.ns,\n            sample = [];\n\n        // Get average smallest measurable time.\n        while (count--) {\n          if (unit == 'us') {\n            divisor = 1e6;\n            if (ns.stop) {\n              ns.start();\n              while (!(measured = ns.microseconds())) {}\n            } else {\n              begin = ns();\n              while (!(measured = ns() - begin)) {}\n            }\n          }\n          else if (unit == 'ns') {\n            divisor = 1e9;\n            begin = (begin = ns())[0] + (begin[1] / divisor);\n            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}\n            divisor = 1;\n          }\n          else if (ns.now) {\n            begin = ns.now();\n            while (!(measured = ns.now() - begin)) {}\n          }\n          else {\n            begin = new ns().getTime();\n            while (!(measured = new ns().getTime() - begin)) {}\n          }\n          // Check for broken timers.\n          if (measured > 0) {\n            sample.push(measured);\n          } else {\n            sample.push(Infinity);\n            break;\n          }\n        }\n        // Convert to seconds.\n        return getMean(sample) / divisor;\n      }\n\n      /**\n       * Interpolates a given template string.\n       */\n      function interpolate(string) {\n        // Replaces all occurrences of `#` with a unique number and template tokens with content.\n        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);\n      }\n\n      /*----------------------------------------------------------------------*/\n\n      // Detect Chrome's microsecond timer:\n      // enable benchmarking via the --enable-benchmarking command\n      // line switch in at least Chrome 7 to use chrome.Interval\n      try {\n        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {\n          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });\n        }\n      } catch(e) {}\n\n      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.\n      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {\n        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });\n      }\n      // Detect Wade Simmons' Node.js `microtime` module.\n      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {\n        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });\n      }\n      // Pick timer with highest resolution.\n      timer = _.minBy(timers, 'res');\n\n      // Error if there are no working timers.\n      if (timer.res == Infinity) {\n        throw new Error('Benchmark.js was unable to find a working timer.');\n      }\n      // Resolve time span required to achieve a percent uncertainty of at most 1%.\n      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.\n      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));\n      return clock.apply(null, arguments);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Computes stats on benchmark results.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function compute(bench, options) {\n      options || (options = {});\n\n      var async = options.async,\n          elapsed = 0,\n          initCount = bench.initCount,\n          minSamples = bench.minSamples,\n          queue = [],\n          sample = bench.stats.sample;\n\n      /**\n       * Adds a clone to the queue.\n       */\n      function enqueue() {\n        queue.push(_.assign(bench.clone(), {\n          '_original': bench,\n          'events': {\n            'abort': [update],\n            'cycle': [update],\n            'error': [update],\n            'start': [update]\n          }\n        }));\n      }\n\n      /**\n       * Updates the clone/original benchmarks to keep their data in sync.\n       */\n      function update(event) {\n        var clone = this,\n            type = event.type;\n\n        if (bench.running) {\n          if (type == 'start') {\n            // Note: `clone.minTime` prop is inited in `clock()`.\n            clone.count = bench.initCount;\n          }\n          else {\n            if (type == 'error') {\n              bench.error = clone.error;\n            }\n            if (type == 'abort') {\n              bench.abort();\n              bench.emit('cycle');\n            } else {\n              event.currentTarget = event.target = bench;\n              bench.emit(event);\n            }\n          }\n        } else if (bench.aborted) {\n          // Clear abort listeners to avoid triggering bench's abort/cycle again.\n          clone.events.abort.length = 0;\n          clone.abort();\n        }\n      }\n\n      /**\n       * Determines if more clones should be queued or if cycling should stop.\n       */\n      function evaluate(event) {\n        var critical,\n            df,\n            mean,\n            moe,\n            rme,\n            sd,\n            sem,\n            variance,\n            clone = event.target,\n            done = bench.aborted,\n            now = _.now(),\n            size = sample.push(clone.times.period),\n            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,\n            times = bench.times,\n            varOf = function(sum, x) { return sum + pow(x - mean, 2); };\n\n        // Exit early for aborted or unclockable tests.\n        if (done || clone.hz == Infinity) {\n          maxedOut = !(size = sample.length = queue.length = 0);\n        }\n\n        if (!done) {\n          // Compute the sample mean (estimate of the population mean).\n          mean = getMean(sample);\n          // Compute the sample variance (estimate of the population variance).\n          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;\n          // Compute the sample standard deviation (estimate of the population standard deviation).\n          sd = sqrt(variance);\n          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).\n          sem = sd / sqrt(size);\n          // Compute the degrees of freedom.\n          df = size - 1;\n          // Compute the critical value.\n          critical = tTable[Math.round(df) || 1] || tTable.infinity;\n          // Compute the margin of error.\n          moe = sem * critical;\n          // Compute the relative margin of error.\n          rme = (moe / mean) * 100 || 0;\n\n          _.assign(bench.stats, {\n            'deviation': sd,\n            'mean': mean,\n            'moe': moe,\n            'rme': rme,\n            'sem': sem,\n            'variance': variance\n          });\n\n          // Abort the cycle loop when the minimum sample size has been collected\n          // and the elapsed time exceeds the maximum time allowed per benchmark.\n          // We don't count cycle delays toward the max time because delays may be\n          // increased by browsers that clamp timeouts for inactive tabs. For more\n          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.\n          if (maxedOut) {\n            // Reset the `initCount` in case the benchmark is rerun.\n            bench.initCount = initCount;\n            bench.running = false;\n            done = true;\n            times.elapsed = (now - times.timeStamp) / 1e3;\n          }\n          if (bench.hz != Infinity) {\n            bench.hz = 1 / mean;\n            times.cycle = mean * bench.count;\n            times.period = mean;\n          }\n        }\n        // If time permits, increase sample size to reduce the margin of error.\n        if (queue.length < 2 && !maxedOut) {\n          enqueue();\n        }\n        // Abort the `invoke` cycle when done.\n        event.aborted = done;\n      }\n\n      // Init queue and begin.\n      enqueue();\n      invoke(queue, {\n        'name': 'run',\n        'args': { 'async': async },\n        'queued': true,\n        'onCycle': evaluate,\n        'onComplete': function() { bench.emit('complete'); }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Cycles a benchmark until a run `count` can be established.\n     *\n     * @private\n     * @param {Object} clone The cloned benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function cycle(clone, options) {\n      options || (options = {});\n\n      var deferred;\n      if (clone instanceof Deferred) {\n        deferred = clone;\n        clone = clone.benchmark;\n      }\n      var clocked,\n          cycles,\n          divisor,\n          event,\n          minTime,\n          period,\n          async = options.async,\n          bench = clone._original,\n          count = clone.count,\n          times = clone.times;\n\n      // Continue, if not aborted between cycles.\n      if (clone.running) {\n        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.\n        cycles = ++clone.cycles;\n        clocked = deferred ? deferred.elapsed : clock(clone);\n        minTime = clone.minTime;\n\n        if (cycles > bench.cycles) {\n          bench.cycles = cycles;\n        }\n        if (clone.error) {\n          event = Event('error');\n          event.message = clone.error;\n          clone.emit(event);\n          if (!event.cancelled) {\n            clone.abort();\n          }\n        }\n      }\n      // Continue, if not errored.\n      if (clone.running) {\n        // Compute the time taken to complete last test cycle.\n        bench.times.cycle = times.cycle = clocked;\n        // Compute the seconds per operation.\n        period = bench.times.period = times.period = clocked / count;\n        // Compute the ops per second.\n        bench.hz = clone.hz = 1 / period;\n        // Avoid working our way up to this next time.\n        bench.initCount = clone.initCount = count;\n        // Do we need to do another cycle?\n        clone.running = clocked < minTime;\n\n        if (clone.running) {\n          // Tests may clock at `0` when `initCount` is a small number,\n          // to avoid that we set its count to something a bit higher.\n          if (!clocked && (divisor = divisors[clone.cycles]) != null) {\n            count = floor(4e6 / divisor);\n          }\n          // Calculate how many more iterations it will take to achieve the `minTime`.\n          if (count <= clone.count) {\n            count += Math.ceil((minTime - clocked) / period);\n          }\n          clone.running = count != Infinity;\n        }\n      }\n      // Should we exit early?\n      event = Event('cycle');\n      clone.emit(event);\n      if (event.aborted) {\n        clone.abort();\n      }\n      // Figure out what to do next.\n      if (clone.running) {\n        // Start a new cycle.\n        clone.count = count;\n        if (deferred) {\n          clone.compiled.call(deferred, context, timer);\n        } else if (async) {\n          delay(clone, function() { cycle(clone, options); });\n        } else {\n          cycle(clone);\n        }\n      }\n      else {\n        // Fix TraceMonkey bug associated with clock fallbacks.\n        // For more information see http://bugzil.la/509069.\n        if (support.browser) {\n          runScript(uid + '=1;delete ' + uid);\n        }\n        // We're done.\n        clone.emit('complete');\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Runs the benchmark.\n     *\n     * @memberOf Benchmark\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The benchmark instance.\n     * @example\n     *\n     * // basic usage\n     * bench.run();\n     *\n     * // or with options\n     * bench.run({ 'async': true });\n     */\n    function run(options) {\n      var bench = this,\n          event = Event('start');\n\n      // Set `running` to `false` so `reset()` won't call `abort()`.\n      bench.running = false;\n      bench.reset();\n      bench.running = true;\n\n      bench.count = bench.initCount;\n      bench.times.timeStamp = _.now();\n      bench.emit(event);\n\n      if (!event.cancelled) {\n        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };\n\n        // For clones created within `compute()`.\n        if (bench._original) {\n          if (bench.defer) {\n            Deferred(bench);\n          } else {\n            cycle(bench, options);\n          }\n        }\n        // For original benchmarks.\n        else {\n          compute(bench, options);\n        }\n      }\n      return bench;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Firefox 1 erroneously defines variable and argument names of functions on\n    // the function itself as non-configurable properties with `undefined` values.\n    // The bugginess continues as the `Benchmark` constructor has an argument\n    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,\n    // making it non-writable in the process, unless it is the first property\n    // assigned by for-in loop of `_.assign()`.\n    _.assign(Benchmark, {\n\n      /**\n       * The default options copied by benchmark instances.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'options': {\n\n        /**\n         * A flag to indicate that benchmark cycles will execute asynchronously\n         * by default.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'async': false,\n\n        /**\n         * A flag to indicate that the benchmark clock is deferred.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'defer': false,\n\n        /**\n         * The delay between test cycles (secs).\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'delay': 0.005,\n\n        /**\n         * Displayed by `Benchmark#toString` when a `name` is not available\n         * (auto-generated if absent).\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'id': undefined,\n\n        /**\n         * The default number of times to execute a test on a benchmark's first cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'initCount': 1,\n\n        /**\n         * The maximum time a benchmark is allowed to run before finishing (secs).\n         *\n         * Note: Cycle delays aren't counted toward the maximum time.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'maxTime': 5,\n\n        /**\n         * The minimum sample size required to perform statistical analysis.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minSamples': 5,\n\n        /**\n         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minTime': 0,\n\n        /**\n         * The name of the benchmark.\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'name': undefined,\n\n        /**\n         * An event listener called when the benchmark is aborted.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onAbort': undefined,\n\n        /**\n         * An event listener called when the benchmark completes running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onComplete': undefined,\n\n        /**\n         * An event listener called after each run cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onCycle': undefined,\n\n        /**\n         * An event listener called when a test errors.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onError': undefined,\n\n        /**\n         * An event listener called when the benchmark is reset.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onReset': undefined,\n\n        /**\n         * An event listener called when the benchmark starts running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onStart': undefined\n      },\n\n      /**\n       * Platform object with properties describing things like browser name,\n       * version, and operating system. See [`platform.js`](https://mths.be/platform).\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'platform': context.platform || require('platform') || ({\n        'description': context.navigator && context.navigator.userAgent || null,\n        'layout': null,\n        'product': null,\n        'name': null,\n        'manufacturer': null,\n        'os': null,\n        'prerelease': null,\n        'version': null,\n        'toString': function() {\n          return this.description || '';\n        }\n      }),\n\n      /**\n       * The semantic version number.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type string\n       */\n      'version': '2.1.4'\n    });\n\n    _.assign(Benchmark, {\n      'filter': filter,\n      'formatNumber': formatNumber,\n      'invoke': invoke,\n      'join': join,\n      'runInContext': runInContext,\n      'support': support\n    });\n\n    // Add lodash methods to Benchmark.\n    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {\n      Benchmark[methodName] = _[methodName];\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Benchmark.prototype, {\n\n      /**\n       * The number of times a test was executed.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'count': 0,\n\n      /**\n       * The number of cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The number of executions per second.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'hz': 0,\n\n      /**\n       * The compiled test function.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'compiled': undefined,\n\n      /**\n       * The error object if the test failed.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'error': undefined,\n\n      /**\n       * The test to benchmark.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'fn': undefined,\n\n      /**\n       * A flag to indicate if the benchmark is aborted.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the benchmark is running.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'running': false,\n\n      /**\n       * Compiled into the test and executed immediately **before** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       * @example\n       *\n       * // basic usage\n       * var bench = Benchmark({\n       *   'setup': function() {\n       *     var c = this.count,\n       *         element = document.getElementById('container');\n       *     while (c--) {\n       *       element.appendChild(document.createElement('div'));\n       *     }\n       *   },\n       *   'fn': function() {\n       *     element.removeChild(element.lastChild);\n       *   }\n       * });\n       *\n       * // compiles to something like:\n       * var c = this.count,\n       *     element = document.getElementById('container');\n       * while (c--) {\n       *   element.appendChild(document.createElement('div'));\n       * }\n       * var start = new Date;\n       * while (count--) {\n       *   element.removeChild(element.lastChild);\n       * }\n       * var end = new Date - start;\n       *\n       * // or using strings\n       * var bench = Benchmark({\n       *   'setup': '\\\n       *     var a = 0;\\n\\\n       *     (function() {\\n\\\n       *       (function() {\\n\\\n       *         (function() {',\n       *   'fn': 'a += 1;',\n       *   'teardown': '\\\n       *          }())\\n\\\n       *        }())\\n\\\n       *      }())'\n       * });\n       *\n       * // compiles to something like:\n       * var a = 0;\n       * (function() {\n       *   (function() {\n       *     (function() {\n       *       var start = new Date;\n       *       while (count--) {\n       *         a += 1;\n       *       }\n       *       var end = new Date - start;\n       *     }())\n       *   }())\n       * }())\n       */\n      'setup': _.noop,\n\n      /**\n       * Compiled into the test and executed immediately **after** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'teardown': _.noop,\n\n      /**\n       * An object of stats including mean, margin or error, and standard deviation.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'stats': {\n\n        /**\n         * The margin of error.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'moe': 0,\n\n        /**\n         * The relative margin of error (expressed as a percentage of the mean).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'rme': 0,\n\n        /**\n         * The standard error of the mean.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'sem': 0,\n\n        /**\n         * The sample standard deviation.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'deviation': 0,\n\n        /**\n         * The sample arithmetic mean (secs).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'mean': 0,\n\n        /**\n         * The array of sampled periods.\n         *\n         * @memberOf Benchmark#stats\n         * @type Array\n         */\n        'sample': [],\n\n        /**\n         * The sample variance.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'variance': 0\n      },\n\n      /**\n       * An object of timing data including cycle, elapsed, period, start, and stop.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'times': {\n\n        /**\n         * The time taken to complete the last cycle (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'cycle': 0,\n\n        /**\n         * The time taken to complete the benchmark (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'elapsed': 0,\n\n        /**\n         * The time taken to execute the test once (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'period': 0,\n\n        /**\n         * A timestamp of when the benchmark started (ms).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'timeStamp': 0\n      }\n    });\n\n    _.assign(Benchmark.prototype, {\n      'abort': abort,\n      'clone': clone,\n      'compare': compare,\n      'emit': emit,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'reset': reset,\n      'run': run,\n      'toString': toStringBench\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Deferred.prototype, {\n\n      /**\n       * The deferred benchmark instance.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type Object\n       */\n      'benchmark': null,\n\n      /**\n       * The number of deferred cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The time taken to complete the deferred benchmark (secs).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'elapsed': 0,\n\n      /**\n       * A timestamp of when the deferred benchmark started (ms).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'timeStamp': 0\n    });\n\n    _.assign(Deferred.prototype, {\n      'resolve': resolve\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Event.prototype, {\n\n      /**\n       * A flag to indicate if the emitters listener iteration is aborted.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the default action is cancelled.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'cancelled': false,\n\n      /**\n       * The object whose listeners are currently being processed.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'currentTarget': undefined,\n\n      /**\n       * The return value of the last executed listener.\n       *\n       * @memberOf Benchmark.Event\n       * @type Mixed\n       */\n      'result': undefined,\n\n      /**\n       * The object to which the event was originally emitted.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'target': undefined,\n\n      /**\n       * A timestamp of when the event was created (ms).\n       *\n       * @memberOf Benchmark.Event\n       * @type number\n       */\n      'timeStamp': 0,\n\n      /**\n       * The event type.\n       *\n       * @memberOf Benchmark.Event\n       * @type string\n       */\n      'type': ''\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The default options copied by suite instances.\n     *\n     * @static\n     * @memberOf Benchmark.Suite\n     * @type Object\n     */\n    Suite.options = {\n\n      /**\n       * The name of the suite.\n       *\n       * @memberOf Benchmark.Suite.options\n       * @type string\n       */\n      'name': undefined\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Suite.prototype, {\n\n      /**\n       * The number of benchmarks in the suite.\n       *\n       * @memberOf Benchmark.Suite\n       * @type number\n       */\n      'length': 0,\n\n      /**\n       * A flag to indicate if the suite is aborted.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the suite is running.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'running': false\n    });\n\n    _.assign(Suite.prototype, {\n      'abort': abortSuite,\n      'add': add,\n      'clone': cloneSuite,\n      'emit': emit,\n      'filter': filterSuite,\n      'join': arrayRef.join,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'pop': arrayRef.pop,\n      'push': push,\n      'reset': resetSuite,\n      'run': runSuite,\n      'reverse': arrayRef.reverse,\n      'shift': shift,\n      'slice': slice,\n      'sort': arrayRef.sort,\n      'splice': arrayRef.splice,\n      'unshift': unshift\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Expose Deferred, Event, and Suite.\n    _.assign(Benchmark, {\n      'Deferred': Deferred,\n      'Event': Event,\n      'Suite': Suite\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Add lodash methods as Suite methods.\n    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {\n      var func = _[methodName];\n      Suite.prototype[methodName] = function() {\n        var args = [this];\n        push.apply(args, arguments);\n        return func.apply(_, args);\n      };\n    });\n\n    // Avoid array-like object bugs with `Array#shift` and `Array#splice`\n    // in Firefox < 10 and IE < 9.\n    _.each(['pop', 'shift', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n\n      Suite.prototype[methodName] = function() {\n        var value = this,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return result;\n      };\n    });\n\n    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new\n    // length of the array.\n    Suite.prototype.unshift = function() {\n      var value = this;\n      unshift.apply(value, arguments);\n      return value.length;\n    };\n\n    return Benchmark;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export Benchmark.\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be aliased.\n    define(['lodash', 'platform'], function(_, platform) {\n      return runInContext({\n        '_': _,\n        'platform': platform\n      });\n    });\n  }\n  else {\n    var Benchmark = runInContext();\n\n    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = Benchmark).Benchmark = Benchmark;\n      }\n      // Export for CommonJS support.\n      freeExports.Benchmark = Benchmark;\n    }\n    else {\n      // Export to the global object.\n      root.Benchmark = Benchmark;\n    }\n  }\n}.call(this));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/Benchmark/benchmark.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}}],"sources":{"node_modules/Benchmark/benchmark.js":"/*!\n * Benchmark.js <https://benchmarkjs.com/>\n * Copyright 2010-2016 Mathias Bynens <https://mths.be/>\n * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>\n * Modified by John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments. */\n  var undefined;\n\n  /** Used to determine if values are of the language type Object. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `define`. */\n  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect free variable `require`. */\n  var freeRequire = typeof require == 'function' && require;\n\n  /** Used to assign each benchmark an incremented id. */\n  var counter = 0;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Used to detect primitive types. */\n  var rePrimitive = /^(?:boolean|number|string|undefined)$/;\n\n  /** Used to make every compiled test unique. */\n  var uidCounter = 0;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',\n    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',\n    'platform', 'process', 'runtime', 'setTimeout'\n  ];\n\n  /** Used to avoid hz of Infinity. */\n  var divisors = {\n    '1': 4096,\n    '2': 512,\n    '3': 64,\n    '4': 8,\n    '5': 0\n  };\n\n  /**\n   * T-Distribution two-tailed critical values for 95% confidence.\n   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.\n   */\n  var tTable = {\n    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,\n    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,\n    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,\n    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,\n    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,\n    'infinity': 1.96\n  };\n\n  /**\n   * Critical Mann-Whitney U-values for 95% confidence.\n   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.\n   */\n  var uTable = {\n    '5':  [0, 1, 2],\n    '6':  [1, 2, 3, 5],\n    '7':  [1, 3, 5, 6, 8],\n    '8':  [2, 4, 6, 8, 10, 13],\n    '9':  [2, 4, 7, 10, 12, 15, 17],\n    '10': [3, 5, 8, 11, 14, 17, 20, 23],\n    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],\n    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],\n    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],\n    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],\n    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],\n    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],\n    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],\n    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],\n    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],\n    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],\n    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],\n    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],\n    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],\n    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],\n    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],\n    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],\n    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],\n    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],\n    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],\n    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `Benchmark` function using the given `context` object.\n   *\n   * @static\n   * @memberOf Benchmark\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `Benchmark` function.\n   */\n  function runInContext(context) {\n    // Exit early if unable to acquire lodash.\n    var _ = context && context._ || require('lodash') || root._;\n    if (!_) {\n      Benchmark.runInContext = runInContext;\n      return Benchmark;\n    }\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String;\n\n    /** Used for `Array` and `Object` method references. */\n    var arrayRef = [],\n        objectProto = Object.prototype;\n\n    /** Native method shortcuts. */\n    var abs = Math.abs,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        log = Math.log,\n        max = Math.max,\n        min = Math.min,\n        pow = Math.pow,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        shift = arrayRef.shift,\n        slice = arrayRef.slice,\n        sqrt = Math.sqrt,\n        toString = objectProto.toString,\n        unshift = arrayRef.unshift;\n\n    /** Used to avoid inclusion in Browserified bundles. */\n    var req = require;\n\n    /** Detect DOM document object. */\n    var doc = isHostType(context, 'document') && context.document;\n\n    /** Used to access Wade Simmons' Node.js `microtime` module. */\n    var microtimeObject = req('microtime');\n\n    /** Used to access Node.js's high resolution timer. */\n    var processObject = isHostType(context, 'process') && context.process;\n\n    /** Used to prevent a `removeChild` memory leak in IE < 9. */\n    var trash = doc && doc.createElement('div');\n\n    /** Used to integrity check compiled tests. */\n    var uid = 'uid' + _.now();\n\n    /** Used to avoid infinite recursion when methods call each other. */\n    var calledBy = {};\n\n    /**\n     * An object used to flag environments/features.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @type Object\n     */\n    var support = {};\n\n    (function() {\n\n      /**\n       * Detect if running in a browser environment.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');\n\n      /**\n       * Detect if the Timers API exists.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');\n\n      /**\n       * Detect if function decompilation is support.\n       *\n       * @name decompilation\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      try {\n        // Safari 2.x removes commas in object literals from `Function#toString` results.\n        // See http://webk.it/11609 for more details.\n        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.\n        // See http://bugzil.la/559438 for more details.\n        support.decompilation = Function(\n          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')\n          // Avoid issues with code added by Istanbul.\n          .replace(/__cov__[^;]+;/g, '')\n        )()(0).x === '1';\n      } catch(e) {\n        support.decompilation = false;\n      }\n    }());\n\n    /**\n     * Timer object used by `clock()` and `Deferred#resolve`.\n     *\n     * @private\n     * @type Object\n     */\n    var timer = {\n\n      /**\n       * The timer namespace object or constructor.\n       *\n       * @private\n       * @memberOf timer\n       * @type {Function|Object}\n       */\n      'ns': Date,\n\n      /**\n       * Starts the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'start': null, // Lazy defined in `clock()`.\n\n      /**\n       * Stops the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'stop': null // Lazy defined in `clock()`.\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The Benchmark constructor.\n     *\n     * Note: The Benchmark constructor exposes a handful of lodash methods to\n     * make working with arrays, collections, and objects easier. The lodash\n     * methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),\n     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var bench = new Benchmark(fn);\n     *\n     * // or using a name first\n     * var bench = new Benchmark('foo', fn);\n     *\n     * // or with options\n     * var bench = new Benchmark('foo', fn, {\n     *\n     *   // displayed by `Benchmark#toString` if `name` is not available\n     *   'id': 'xyz',\n     *\n     *   // called when the benchmark starts running\n     *   'onStart': onStart,\n     *\n     *   // called after each run cycle\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the benchmark completes running\n     *   'onComplete': onComplete,\n     *\n     *   // compiled/called before the test loop\n     *   'setup': setup,\n     *\n     *   // compiled/called after the test loop\n     *   'teardown': teardown\n     * });\n     *\n     * // or name and options\n     * var bench = new Benchmark('foo', {\n     *\n     *   // a flag to indicate the benchmark is deferred\n     *   'defer': true,\n     *\n     *   // benchmark test function\n     *   'fn': function(deferred) {\n     *     // call `Deferred#resolve` when the deferred test is finished\n     *     deferred.resolve();\n     *   }\n     * });\n     *\n     * // or options only\n     * var bench = new Benchmark({\n     *\n     *   // benchmark name\n     *   'name': 'foo',\n     *\n     *   // benchmark test as a string\n     *   'fn': '[1,2,3,4].sort()'\n     * });\n     *\n     * // a test's `this` binding is set to the benchmark instance\n     * var bench = new Benchmark('foo', function() {\n     *   'My name is '.concat(this.name); // \"My name is foo\"\n     * });\n     */\n    function Benchmark(name, fn, options) {\n      var bench = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(bench instanceof Benchmark)) {\n        return new Benchmark(name, fn, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      }\n      else if (_.isFunction(name)) {\n        // 2 arguments (fn, options).\n        options = fn;\n        fn = name;\n      }\n      else if (_.isPlainObject(fn)) {\n        // 2 arguments (name, options).\n        options = fn;\n        fn = null;\n        bench.name = name;\n      }\n      else {\n        // 3 arguments (name, fn [, options]).\n        bench.name = name;\n      }\n      setOptions(bench, options);\n\n      bench.id || (bench.id = ++counter);\n      bench.fn == null && (bench.fn = fn);\n\n      bench.stats = cloneDeep(bench.stats);\n      bench.times = cloneDeep(bench.times);\n    }\n\n    /**\n     * The Deferred constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object} clone The cloned benchmark instance.\n     */\n    function Deferred(clone) {\n      var deferred = this;\n      if (!(deferred instanceof Deferred)) {\n        return new Deferred(clone);\n      }\n      deferred.benchmark = clone;\n      clock(deferred);\n    }\n\n    /**\n     * The Event constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object|string} type The event type.\n     */\n    function Event(type) {\n      var event = this;\n      if (type instanceof Event) {\n        return type;\n      }\n      return (event instanceof Event)\n        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)\n        : new Event(type);\n    }\n\n    /**\n     * The Suite constructor.\n     *\n     * Note: Each Suite instance has a handful of wrapped lodash methods to\n     * make working with Suites easier. The wrapped lodash methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {string} name A name to identify the suite.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var suite = new Benchmark.Suite;\n     *\n     * // or using a name first\n     * var suite = new Benchmark.Suite('foo');\n     *\n     * // or with options\n     * var suite = new Benchmark.Suite('foo', {\n     *\n     *   // called when the suite starts running\n     *   'onStart': onStart,\n     *\n     *   // called between running benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the suite completes running\n     *   'onComplete': onComplete\n     * });\n     */\n    function Suite(name, options) {\n      var suite = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(suite instanceof Suite)) {\n        return new Suite(name, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      } else {\n        // 2 arguments (name [, options]).\n        suite.name = name;\n      }\n      setOptions(suite, options);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A specialized version of `_.cloneDeep` which only clones arrays and plain\n     * objects assigning all other values by reference.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @returns {*} The cloned value.\n     */\n    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {\n      // Only clone primitives, arrays, and plain objects.\n      if (!_.isArray(value) && !_.isPlainObject(value)) {\n        return value;\n      }\n    });\n\n    /**\n     * Creates a function from the given arguments string and body.\n     *\n     * @private\n     * @param {string} args The comma separated function arguments.\n     * @param {string} body The function body.\n     * @returns {Function} The new function.\n     */\n    function createFunction() {\n      // Lazy define.\n      createFunction = function(args, body) {\n        var result,\n            anchor = freeDefine ? freeDefine.amd : Benchmark,\n            prop = uid + 'createFunction';\n\n        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');\n        result = anchor[prop];\n        delete anchor[prop];\n        return result;\n      };\n      // Fix JaegerMonkey bug.\n      // For more information see http://bugzil.la/639720.\n      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;\n      return createFunction.apply(null, arguments);\n    }\n\n    /**\n     * Delay the execution of a function based on the benchmark's `delay` property.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} fn The function to execute.\n     */\n    function delay(bench, fn) {\n      bench._timerId = _.delay(fn, bench.delay * 1e3);\n    }\n\n    /**\n     * Destroys the given element.\n     *\n     * @private\n     * @param {Element} element The element to destroy.\n     */\n    function destroyElement(element) {\n      trash.appendChild(element);\n      trash.innerHTML = '';\n    }\n\n    /**\n     * Gets the name of the first argument from a function's source.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The argument name.\n     */\n    function getFirstArgument(fn) {\n      return (!_.has(fn, 'toString') &&\n        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';\n    }\n\n    /**\n     * Computes the arithmetic mean of a sample.\n     *\n     * @private\n     * @param {Array} sample The sample.\n     * @returns {number} The mean.\n     */\n    function getMean(sample) {\n      return (_.reduce(sample, function(sum, x) {\n        return sum + x;\n      }) / sample.length) || 0;\n    }\n\n    /**\n     * Gets the source code of a function.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The function's source code.\n     */\n    function getSource(fn) {\n      var result = '';\n      if (isStringable(fn)) {\n        result = String(fn);\n      } else if (support.decompilation) {\n        // Escape the `{` for Firefox 1.\n        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);\n      }\n      // Trim string.\n      result = (result || '').replace(/^\\s+|\\s+$/g, '');\n\n      // Detect strings containing only the \"use strict\" directive.\n      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)\n        ? ''\n        : result;\n    }\n\n    /**\n     * Checks if an object is of the specified class.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {string} name The name of the class.\n     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.\n     */\n    function isClassOf(value, name) {\n      return value != null && toString.call(value) == '[object ' + name + ']';\n    }\n\n    /**\n     * Host objects can return type values that are different from their actual\n     * data type. The objects we are concerned with usually return non-primitive\n     * types of \"object\", \"function\", or \"unknown\".\n     *\n     * @private\n     * @param {*} object The owner of the property.\n     * @param {string} property The property to check.\n     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n     */\n    function isHostType(object, property) {\n      if (object == null) {\n        return false;\n      }\n      var type = typeof object[property];\n      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);\n    }\n\n    /**\n     * Checks if a value can be safely coerced to a string.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.\n     */\n    function isStringable(value) {\n      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));\n    }\n\n    /**\n     * A wrapper around `require` to suppress `module missing` errors.\n     *\n     * @private\n     * @param {string} id The module id.\n     * @returns {*} The exported module or `null`.\n     */\n    function require(id) {\n      try {\n        var result = freeExports && freeRequire(id);\n      } catch(e) {}\n      return result || null;\n    }\n\n    /**\n     * Runs a snippet of JavaScript via script injection.\n     *\n     * @private\n     * @param {string} code The code to run.\n     */\n    function runScript(code) {\n      var anchor = freeDefine ? define.amd : Benchmark,\n          script = doc.createElement('script'),\n          sibling = doc.getElementsByTagName('script')[0],\n          parent = sibling.parentNode,\n          prop = uid + 'runScript',\n          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';\n\n      // Firefox 2.0.0.2 cannot use script injection as intended because it executes\n      // asynchronously, but that's OK because script injection is only used to avoid\n      // the previously commented JaegerMonkey bug.\n      try {\n        // Remove the inserted script *before* running the code to avoid differences\n        // in the expected script element count/order of the document.\n        script.appendChild(doc.createTextNode(prefix + code));\n        anchor[prop] = function() { destroyElement(script); };\n      } catch(e) {\n        parent = parent.cloneNode(false);\n        sibling = null;\n        script.text = code;\n      }\n      parent.insertBefore(script, sibling);\n      delete anchor[prop];\n    }\n\n    /**\n     * A helper function for setting options/event handlers.\n     *\n     * @private\n     * @param {Object} object The benchmark or suite instance.\n     * @param {Object} [options={}] Options object.\n     */\n    function setOptions(object, options) {\n      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));\n\n      _.forOwn(options, function(value, key) {\n        if (value != null) {\n          // Add event listeners.\n          if (/^on[A-Z]/.test(key)) {\n            _.each(key.split(' '), function(key) {\n              object.on(key.slice(2).toLowerCase(), value);\n            });\n          } else if (!_.has(object, key)) {\n            object[key] = cloneDeep(value);\n          }\n        }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Handles cycling/completing the deferred benchmark.\n     *\n     * @memberOf Benchmark.Deferred\n     */\n    function resolve() {\n      var deferred = this,\n          clone = deferred.benchmark,\n          bench = clone._original;\n\n      if (bench.aborted) {\n        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.\n        deferred.teardown();\n        clone.running = false;\n        cycle(deferred);\n      }\n      else if (++deferred.cycles < clone.count) {\n        clone.compiled.call(deferred, context, timer);\n      }\n      else {\n        timer.stop(deferred);\n        deferred.teardown();\n        delay(clone, function() { cycle(deferred); });\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A generic `Array#filter` like method.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} array The array to iterate over.\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Array} A new array of values that passed callback filter.\n     * @example\n     *\n     * // get odd numbers\n     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n     *   return n % 2;\n     * }); // -> [1, 3, 5];\n     *\n     * // get fastest benchmarks\n     * Benchmark.filter(benches, 'fastest');\n     *\n     * // get slowest benchmarks\n     * Benchmark.filter(benches, 'slowest');\n     *\n     * // get benchmarks that completed without erroring\n     * Benchmark.filter(benches, 'successful');\n     */\n    function filter(array, callback) {\n      if (callback === 'successful') {\n        // Callback to exclude those that are errored, unrun, or have hz of Infinity.\n        callback = function(bench) {\n          return bench.cycles && _.isFinite(bench.hz) && !bench.error;\n        };\n      }\n      else if (callback === 'fastest' || callback === 'slowest') {\n        // Get successful, sort by period + margin of error, and filter fastest/slowest.\n        var result = filter(array, 'successful').sort(function(a, b) {\n          a = a.stats; b = b.stats;\n          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);\n        });\n\n        return _.filter(result, function(bench) {\n          return result[0].compare(bench) == 0;\n        });\n      }\n      return _.filter(array, callback);\n    }\n\n    /**\n     * Converts a number to a more readable comma-separated string representation.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {number} number The number to convert.\n     * @returns {string} The more readable string representation.\n     */\n    function formatNumber(number) {\n      number = String(number).split('.');\n      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +\n        (number[1] ? '.' + number[1] : '');\n    }\n\n    /**\n     * Invokes a method on all items in an array.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} benches Array of benchmarks to iterate over.\n     * @param {Object|string} name The name of the method to invoke OR options object.\n     * @param {...*} [args] Arguments to invoke the method with.\n     * @returns {Array} A new array of values returned from each method invoked.\n     * @example\n     *\n     * // invoke `reset` on all benchmarks\n     * Benchmark.invoke(benches, 'reset');\n     *\n     * // invoke `emit` with arguments\n     * Benchmark.invoke(benches, 'emit', 'complete', listener);\n     *\n     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n     * Benchmark.invoke(benches, {\n     *\n     *   // invoke the `run` method\n     *   'name': 'run',\n     *\n     *   // pass a single argument\n     *   'args': true,\n     *\n     *   // treat as queue, removing benchmarks from front of `benches` until empty\n     *   'queued': true,\n     *\n     *   // called before any benchmarks have been invoked.\n     *   'onStart': onStart,\n     *\n     *   // called between invoking benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called after all benchmarks have been invoked.\n     *   'onComplete': onComplete\n     * });\n     */\n    function invoke(benches, name) {\n      var args,\n          bench,\n          queued,\n          index = -1,\n          eventProps = { 'currentTarget': benches },\n          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },\n          result = _.toArray(benches);\n\n      /**\n       * Invokes the method of the current object and if synchronous, fetches the next.\n       */\n      function execute() {\n        var listeners,\n            async = isAsync(bench);\n\n        if (async) {\n          // Use `getNext` as the first listener.\n          bench.on('complete', getNext);\n          listeners = bench.events.complete;\n          listeners.splice(0, 0, listeners.pop());\n        }\n        // Execute method.\n        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;\n        // If synchronous return `true` until finished.\n        return !async && getNext();\n      }\n\n      /**\n       * Fetches the next bench or executes `onComplete` callback.\n       */\n      function getNext(event) {\n        var cycleEvent,\n            last = bench,\n            async = isAsync(last);\n\n        if (async) {\n          last.off('complete', getNext);\n          last.emit('complete');\n        }\n        // Emit \"cycle\" event.\n        eventProps.type = 'cycle';\n        eventProps.target = last;\n        cycleEvent = Event(eventProps);\n        options.onCycle.call(benches, cycleEvent);\n\n        // Choose next benchmark if not exiting early.\n        if (!cycleEvent.aborted && raiseIndex() !== false) {\n          bench = queued ? benches[0] : result[index];\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          }\n          else if (async) {\n            // Resume execution if previously asynchronous but now synchronous.\n            while (execute()) {}\n          }\n          else {\n            // Continue synchronous execution.\n            return true;\n          }\n        } else {\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // When used as a listener `event.aborted = true` will cancel the rest of\n        // the \"complete\" listeners because they were already called above and when\n        // used as part of `getNext` the `return false` will exit the execution while-loop.\n        if (event) {\n          event.aborted = true;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Checks if invoking `Benchmark#run` with asynchronous cycles.\n       */\n      function isAsync(object) {\n        // Avoid using `instanceof` here because of IE memory leak issues with host objects.\n        var async = args[0] && args[0].async;\n        return name == 'run' && (object instanceof Benchmark) &&\n          ((async == null ? object.options.async : async) && support.timeout || object.defer);\n      }\n\n      /**\n       * Raises `index` to the next defined index or returns `false`.\n       */\n      function raiseIndex() {\n        index++;\n\n        // If queued remove the previous bench.\n        if (queued && index > 0) {\n          shift.call(benches);\n        }\n        // If we reached the last index then return `false`.\n        return (queued ? benches.length : index < result.length)\n          ? index\n          : (index = false);\n      }\n      // Juggle arguments.\n      if (_.isString(name)) {\n        // 2 arguments (array, name).\n        args = slice.call(arguments, 2);\n      } else {\n        // 2 arguments (array, options).\n        options = _.assign(options, name);\n        name = options.name;\n        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];\n        queued = options.queued;\n      }\n      // Start iterating over the array.\n      if (raiseIndex() !== false) {\n        // Emit \"start\" event.\n        bench = result[index];\n        eventProps.type = 'start';\n        eventProps.target = bench;\n        options.onStart.call(benches, Event(eventProps));\n\n        // End early if the suite was aborted in an \"onStart\" listener.\n        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {\n          // Emit \"cycle\" event.\n          eventProps.type = 'cycle';\n          options.onCycle.call(benches, Event(eventProps));\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // Start method execution.\n        else {\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          } else {\n            while (execute()) {}\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a string of joined array values or object key-value pairs.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array|Object} object The object to operate on.\n     * @param {string} [separator1=','] The separator used between key-value pairs.\n     * @param {string} [separator2=': '] The separator used between keys and values.\n     * @returns {string} The joined result.\n     */\n    function join(object, separator1, separator2) {\n      var result = [],\n          length = (object = Object(object)).length,\n          arrayLike = length === length >>> 0;\n\n      separator2 || (separator2 = ': ');\n      _.each(object, function(value, key) {\n        result.push(arrayLike ? value : key + separator2 + value);\n      });\n      return result.join(separator1 || ',');\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts all benchmarks in the suite.\n     *\n     * @name abort\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function abortSuite() {\n      var event,\n          suite = this,\n          resetting = calledBy.resetSuite;\n\n      if (suite.running) {\n        event = Event('abort');\n        suite.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abortSuite = true;\n          suite.reset();\n          delete calledBy.abortSuite;\n\n          if (!resetting) {\n            suite.aborted = true;\n            invoke(suite, 'abort');\n          }\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Adds a test to the benchmark suite.\n     *\n     * @memberOf Benchmark.Suite\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.add(fn);\n     *\n     * // or using a name first\n     * suite.add('foo', fn);\n     *\n     * // or with options\n     * suite.add('foo', fn, {\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or name and options\n     * suite.add('foo', {\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or options only\n     * suite.add({\n     *   'name': 'foo',\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     */\n    function add(name, fn, options) {\n      var suite = this,\n          bench = new Benchmark(name, fn, options),\n          event = Event({ 'type': 'add', 'target': bench });\n\n      if (suite.emit(event), !event.cancelled) {\n        suite.push(bench);\n      }\n      return suite;\n    }\n\n    /**\n     * Creates a new suite with cloned benchmarks.\n     *\n     * @name clone\n     * @memberOf Benchmark.Suite\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new suite instance.\n     */\n    function cloneSuite(options) {\n      var suite = this,\n          result = new suite.constructor(_.assign({}, suite.options, options));\n\n      // Copy own properties.\n      _.forOwn(suite, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = _.isFunction(_.get(value, 'clone'))\n            ? value.clone()\n            : cloneDeep(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * An `Array#filter` like method.\n     *\n     * @name filter\n     * @memberOf Benchmark.Suite\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Object} A new suite of benchmarks that passed callback filter.\n     */\n    function filterSuite(callback) {\n      var suite = this,\n          result = new suite.constructor(suite.options);\n\n      result.push.apply(result, filter(suite, callback));\n      return result;\n    }\n\n    /**\n     * Resets all benchmarks in the suite.\n     *\n     * @name reset\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function resetSuite() {\n      var event,\n          suite = this,\n          aborting = calledBy.abortSuite;\n\n      if (suite.running && !aborting) {\n        // No worries, `resetSuite()` is called within `abortSuite()`.\n        calledBy.resetSuite = true;\n        suite.abort();\n        delete calledBy.resetSuite;\n      }\n      // Reset if the state has changed.\n      else if ((suite.aborted || suite.running) &&\n          (suite.emit(event = Event('reset')), !event.cancelled)) {\n        suite.aborted = suite.running = false;\n        if (!aborting) {\n          invoke(suite, 'reset');\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Runs the suite.\n     *\n     * @name run\n     * @memberOf Benchmark.Suite\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.run();\n     *\n     * // or with options\n     * suite.run({ 'async': true, 'queued': true });\n     */\n    function runSuite(options) {\n      var suite = this;\n\n      suite.reset();\n      suite.running = true;\n      options || (options = {});\n\n      invoke(suite, {\n        'name': 'run',\n        'args': options,\n        'queued': options.queued,\n        'onStart': function(event) {\n          suite.emit(event);\n        },\n        'onCycle': function(event) {\n          var bench = event.target;\n          if (bench.error) {\n            suite.emit({ 'type': 'error', 'target': bench });\n          }\n          suite.emit(event);\n          event.aborted = suite.aborted;\n        },\n        'onComplete': function(event) {\n          suite.running = false;\n          suite.emit(event);\n        }\n      });\n      return suite;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Executes all registered listeners of the specified event type.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {Object|string} type The event type or object.\n     * @param {...*} [args] Arguments to invoke the listener with.\n     * @returns {*} Returns the return value of the last listener executed.\n     */\n    function emit(type) {\n      var listeners,\n          object = this,\n          event = Event(type),\n          events = object.events,\n          args = (arguments[0] = event, arguments);\n\n      event.currentTarget || (event.currentTarget = object);\n      event.target || (event.target = object);\n      delete event.result;\n\n      if (events && (listeners = _.has(events, event.type) && events[event.type])) {\n        _.each(listeners.slice(), function(listener) {\n          if ((event.result = listener.apply(object, args)) === false) {\n            event.cancelled = true;\n          }\n          return !event.aborted;\n        });\n      }\n      return event.result;\n    }\n\n    /**\n     * Returns an array of event listeners for a given type that can be manipulated\n     * to add or remove listeners.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @returns {Array} The listeners array.\n     */\n    function listeners(type) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      return _.has(events, type) ? events[type] : (events[type] = []);\n    }\n\n    /**\n     * Unregisters a listener for the specified event type(s),\n     * or unregisters all listeners for the specified event type(s),\n     * or unregisters all listeners for all event types.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} [type] The event type.\n     * @param {Function} [listener] The function to unregister.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // unregister a listener for an event type\n     * bench.off('cycle', listener);\n     *\n     * // unregister a listener for multiple event types\n     * bench.off('start cycle', listener);\n     *\n     * // unregister all listeners for an event type\n     * bench.off('cycle');\n     *\n     * // unregister all listeners for multiple event types\n     * bench.off('start cycle complete');\n     *\n     * // unregister all listeners for all event types\n     * bench.off();\n     */\n    function off(type, listener) {\n      var object = this,\n          events = object.events;\n\n      if (!events) {\n        return object;\n      }\n      _.each(type ? type.split(' ') : events, function(listeners, type) {\n        var index;\n        if (typeof listeners == 'string') {\n          type = listeners;\n          listeners = _.has(events, type) && events[type];\n        }\n        if (listeners) {\n          if (listener) {\n            index = _.indexOf(listeners, listener);\n            if (index > -1) {\n              listeners.splice(index, 1);\n            }\n          } else {\n            listeners.length = 0;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * Registers a listener for the specified event type(s).\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @param {Function} listener The function to register.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // register a listener for an event type\n     * bench.on('cycle', listener);\n     *\n     * // register a listener for multiple event types\n     * bench.on('start cycle', listener);\n     */\n    function on(type, listener) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      _.each(type.split(' '), function(type) {\n        (_.has(events, type)\n          ? events[type]\n          : (events[type] = [])\n        ).push(listener);\n      });\n      return object;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts the benchmark without recording times.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function abort() {\n      var event,\n          bench = this,\n          resetting = calledBy.reset;\n\n      if (bench.running) {\n        event = Event('abort');\n        bench.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abort = true;\n          bench.reset();\n          delete calledBy.abort;\n\n          if (support.timeout) {\n            clearTimeout(bench._timerId);\n            delete bench._timerId;\n          }\n          if (!resetting) {\n            bench.aborted = true;\n            bench.running = false;\n          }\n        }\n      }\n      return bench;\n    }\n\n    /**\n     * Creates a new benchmark using the same test and options.\n     *\n     * @memberOf Benchmark\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new benchmark instance.\n     * @example\n     *\n     * var bizarro = bench.clone({\n     *   'name': 'doppelganger'\n     * });\n     */\n    function clone(options) {\n      var bench = this,\n          result = new bench.constructor(_.assign({}, bench, options));\n\n      // Correct the `options` object.\n      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));\n\n      // Copy own custom properties.\n      _.forOwn(bench, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = cloneDeep(value);\n        }\n      });\n\n      return result;\n    }\n\n    /**\n     * Determines if a benchmark is faster than another.\n     *\n     * @memberOf Benchmark\n     * @param {Object} other The benchmark to compare.\n     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.\n     */\n    function compare(other) {\n      var bench = this;\n\n      // Exit early if comparing the same benchmark.\n      if (bench == other) {\n        return 0;\n      }\n      var critical,\n          zStat,\n          sample1 = bench.stats.sample,\n          sample2 = other.stats.sample,\n          size1 = sample1.length,\n          size2 = sample2.length,\n          maxSize = max(size1, size2),\n          minSize = min(size1, size2),\n          u1 = getU(sample1, sample2),\n          u2 = getU(sample2, sample1),\n          u = min(u1, u2);\n\n      function getScore(xA, sampleB) {\n        return _.reduce(sampleB, function(total, xB) {\n          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);\n        }, 0);\n      }\n\n      function getU(sampleA, sampleB) {\n        return _.reduce(sampleA, function(total, xA) {\n          return total + getScore(xA, sampleB);\n        }, 0);\n      }\n\n      function getZ(u) {\n        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);\n      }\n      // Reject the null hypothesis the two samples come from the\n      // same population (i.e. have the same median) if...\n      if (size1 + size2 > 30) {\n        // ...the z-stat is greater than 1.96 or less than -1.96\n        // http://www.statisticslectures.com/topics/mannwhitneyu/\n        zStat = getZ(u);\n        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;\n      }\n      // ...the U value is less than or equal the critical U value.\n      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];\n      return u <= critical ? (u == u1 ? 1 : -1) : 0;\n    }\n\n    /**\n     * Reset properties and abort if running.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function reset() {\n      var bench = this;\n      if (bench.running && !calledBy.abort) {\n        // No worries, `reset()` is called within `abort()`.\n        calledBy.reset = true;\n        bench.abort();\n        delete calledBy.reset;\n        return bench;\n      }\n      var event,\n          index = 0,\n          changes = [],\n          queue = [];\n\n      // A non-recursive solution to check if properties have changed.\n      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.\n      var data = {\n        'destination': bench,\n        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))\n      };\n\n      do {\n        _.forOwn(data.source, function(value, key) {\n          var changed,\n              destination = data.destination,\n              currValue = destination[key];\n\n          // Skip pseudo private properties and event listeners.\n          if (/^_|^events$|^on[A-Z]/.test(key)) {\n            return;\n          }\n          if (_.isObjectLike(value)) {\n            if (_.isArray(value)) {\n              // Check if an array value has changed to a non-array value.\n              if (!_.isArray(currValue)) {\n                changed = true;\n                currValue = [];\n              }\n              // Check if an array has changed its length.\n              if (currValue.length != value.length) {\n                changed = true;\n                currValue = currValue.slice(0, value.length);\n                currValue.length = value.length;\n              }\n            }\n            // Check if an object has changed to a non-object value.\n            else if (!_.isObjectLike(currValue)) {\n              changed = true;\n              currValue = {};\n            }\n            // Register a changed object.\n            if (changed) {\n              changes.push({ 'destination': destination, 'key': key, 'value': currValue });\n            }\n            queue.push({ 'destination': currValue, 'source': value });\n          }\n          // Register a changed primitive.\n          else if (!_.eq(currValue, value) && value !== undefined) {\n            changes.push({ 'destination': destination, 'key': key, 'value': value });\n          }\n        });\n      }\n      while ((data = queue[index++]));\n\n      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.\n      if (changes.length &&\n          (bench.emit(event = Event('reset')), !event.cancelled)) {\n        _.each(changes, function(data) {\n          data.destination[data.key] = data.value;\n        });\n      }\n      return bench;\n    }\n\n    /**\n     * Displays relevant benchmark information when coerced to a string.\n     *\n     * @name toString\n     * @memberOf Benchmark\n     * @returns {string} A string representation of the benchmark instance.\n     */\n    function toStringBench() {\n      var bench = this,\n          error = bench.error,\n          hz = bench.hz,\n          id = bench.id,\n          stats = bench.stats,\n          size = stats.sample.length,\n          pm = '\\xb1',\n          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');\n\n      if (error) {\n        var errorStr;\n        if (!_.isObject(error)) {\n          errorStr = String(error);\n        } else if (!_.isError(Error)) {\n          errorStr = join(error);\n        } else {\n          // Error#name and Error#message properties are non-enumerable.\n          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));\n        }\n        result += ': ' + errorStr;\n      }\n      else {\n        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +\n          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clocks the time taken to execute a test per cycle (secs).\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @returns {number} The time taken.\n     */\n    function clock() {\n      var options = Benchmark.options,\n          templateData = {},\n          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];\n\n      // Lazy define for hi-res timers.\n      clock = function(clone) {\n        var deferred;\n\n        if (clone instanceof Deferred) {\n          deferred = clone;\n          clone = deferred.benchmark;\n        }\n        var bench = clone._original,\n            stringable = isStringable(bench.fn),\n            count = bench.count = clone.count,\n            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),\n            id = bench.id,\n            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),\n            result = 0;\n\n        // Init `minTime` if needed.\n        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);\n\n        // Compile in setup/teardown functions and the test loop.\n        // Create a new compiled test, instead of using the cached `bench.compiled`,\n        // to avoid potential engine optimizations enabled over the life of the test.\n        var funcBody = deferred\n          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +\n            // When `deferred.cycles` is `0` then...\n            'if(!d#.cycles){' +\n            // set `deferred.fn`,\n            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +\n            // set `deferred.teardown`,\n            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +\n            // execute the benchmark's `setup`,\n            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +\n            // start timer,\n            't#.start(d#);' +\n            // and then execute `deferred.fn` and return a dummy object.\n            '}d#.fn();return{uid:\"${uid}\"}'\n\n          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +\n            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';\n\n        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),\n            isEmpty = !(templateData.fn || stringable);\n\n        try {\n          if (isEmpty) {\n            // Firefox may remove dead code from `Function#toString` results.\n            // For more information see http://bugzil.la/536085.\n            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');\n          }\n          else if (!deferred) {\n            // Pretest to determine if compiled code exits early, usually by a\n            // rogue `return` statement, by checking for a return object with the uid.\n            bench.count = 1;\n            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;\n            bench.count = count;\n          }\n        } catch(e) {\n          compiled = null;\n          clone.error = e || new Error(String(e));\n          bench.count = count;\n        }\n        // Fallback when a test exits early or errors during pretest.\n        if (!compiled && !deferred && !isEmpty) {\n          funcBody = (\n            stringable || (decompilable && !clone.error)\n              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'\n              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'\n            ) +\n            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +\n            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';\n\n          compiled = createCompiled(bench, decompilable, deferred, funcBody);\n\n          try {\n            // Pretest one more time to check for errors.\n            bench.count = 1;\n            compiled.call(bench, context, timer);\n            bench.count = count;\n            delete clone.error;\n          }\n          catch(e) {\n            bench.count = count;\n            if (!clone.error) {\n              clone.error = e || new Error(String(e));\n            }\n          }\n        }\n        // If no errors run the full test loop.\n        if (!clone.error) {\n          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);\n          result = compiled.call(deferred || bench, context, timer).elapsed;\n        }\n        return result;\n      };\n\n      /*----------------------------------------------------------------------*/\n\n      /**\n       * Creates a compiled function from the given function `body`.\n       */\n      function createCompiled(bench, decompilable, deferred, body) {\n        var fn = bench.fn,\n            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';\n\n        templateData.uid = uid + uidCounter++;\n\n        _.assign(templateData, {\n          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),\n          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),\n          'fnArg': fnArg,\n          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')\n        });\n\n        // Use API of chosen timer.\n        if (timer.unit == 'ns') {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#()'),\n            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')\n          });\n        }\n        else if (timer.unit == 'us') {\n          if (timer.ns.stop) {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#.start()'),\n              'end': interpolate('r#=n#.microseconds()/1e6')\n            });\n          } else {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#()'),\n              'end': interpolate('r#=(n#()-s#)/1e6')\n            });\n          }\n        }\n        else if (timer.ns.now) {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#.now()'),\n            'end': interpolate('r#=(n#.now()-s#)/1e3')\n          });\n        }\n        else {\n          _.assign(templateData, {\n            'begin': interpolate('s#=new n#().getTime()'),\n            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')\n          });\n        }\n        // Define `timer` methods.\n        timer.start = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')\n        );\n\n        timer.stop = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')\n        );\n\n        // Create compiled test.\n        return createFunction(\n          interpolate('window,t#'),\n          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +\n          interpolate(body)\n        );\n      }\n\n      /**\n       * Gets the current timer's minimum resolution (secs).\n       */\n      function getRes(unit) {\n        var measured,\n            begin,\n            count = 30,\n            divisor = 1e3,\n            ns = timer.ns,\n            sample = [];\n\n        // Get average smallest measurable time.\n        while (count--) {\n          if (unit == 'us') {\n            divisor = 1e6;\n            if (ns.stop) {\n              ns.start();\n              while (!(measured = ns.microseconds())) {}\n            } else {\n              begin = ns();\n              while (!(measured = ns() - begin)) {}\n            }\n          }\n          else if (unit == 'ns') {\n            divisor = 1e9;\n            begin = (begin = ns())[0] + (begin[1] / divisor);\n            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}\n            divisor = 1;\n          }\n          else if (ns.now) {\n            begin = ns.now();\n            while (!(measured = ns.now() - begin)) {}\n          }\n          else {\n            begin = new ns().getTime();\n            while (!(measured = new ns().getTime() - begin)) {}\n          }\n          // Check for broken timers.\n          if (measured > 0) {\n            sample.push(measured);\n          } else {\n            sample.push(Infinity);\n            break;\n          }\n        }\n        // Convert to seconds.\n        return getMean(sample) / divisor;\n      }\n\n      /**\n       * Interpolates a given template string.\n       */\n      function interpolate(string) {\n        // Replaces all occurrences of `#` with a unique number and template tokens with content.\n        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);\n      }\n\n      /*----------------------------------------------------------------------*/\n\n      // Detect Chrome's microsecond timer:\n      // enable benchmarking via the --enable-benchmarking command\n      // line switch in at least Chrome 7 to use chrome.Interval\n      try {\n        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {\n          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });\n        }\n      } catch(e) {}\n\n      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.\n      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {\n        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });\n      }\n      // Detect Wade Simmons' Node.js `microtime` module.\n      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {\n        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });\n      }\n      // Pick timer with highest resolution.\n      timer = _.minBy(timers, 'res');\n\n      // Error if there are no working timers.\n      if (timer.res == Infinity) {\n        throw new Error('Benchmark.js was unable to find a working timer.');\n      }\n      // Resolve time span required to achieve a percent uncertainty of at most 1%.\n      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.\n      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));\n      return clock.apply(null, arguments);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Computes stats on benchmark results.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function compute(bench, options) {\n      options || (options = {});\n\n      var async = options.async,\n          elapsed = 0,\n          initCount = bench.initCount,\n          minSamples = bench.minSamples,\n          queue = [],\n          sample = bench.stats.sample;\n\n      /**\n       * Adds a clone to the queue.\n       */\n      function enqueue() {\n        queue.push(_.assign(bench.clone(), {\n          '_original': bench,\n          'events': {\n            'abort': [update],\n            'cycle': [update],\n            'error': [update],\n            'start': [update]\n          }\n        }));\n      }\n\n      /**\n       * Updates the clone/original benchmarks to keep their data in sync.\n       */\n      function update(event) {\n        var clone = this,\n            type = event.type;\n\n        if (bench.running) {\n          if (type == 'start') {\n            // Note: `clone.minTime` prop is inited in `clock()`.\n            clone.count = bench.initCount;\n          }\n          else {\n            if (type == 'error') {\n              bench.error = clone.error;\n            }\n            if (type == 'abort') {\n              bench.abort();\n              bench.emit('cycle');\n            } else {\n              event.currentTarget = event.target = bench;\n              bench.emit(event);\n            }\n          }\n        } else if (bench.aborted) {\n          // Clear abort listeners to avoid triggering bench's abort/cycle again.\n          clone.events.abort.length = 0;\n          clone.abort();\n        }\n      }\n\n      /**\n       * Determines if more clones should be queued or if cycling should stop.\n       */\n      function evaluate(event) {\n        var critical,\n            df,\n            mean,\n            moe,\n            rme,\n            sd,\n            sem,\n            variance,\n            clone = event.target,\n            done = bench.aborted,\n            now = _.now(),\n            size = sample.push(clone.times.period),\n            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,\n            times = bench.times,\n            varOf = function(sum, x) { return sum + pow(x - mean, 2); };\n\n        // Exit early for aborted or unclockable tests.\n        if (done || clone.hz == Infinity) {\n          maxedOut = !(size = sample.length = queue.length = 0);\n        }\n\n        if (!done) {\n          // Compute the sample mean (estimate of the population mean).\n          mean = getMean(sample);\n          // Compute the sample variance (estimate of the population variance).\n          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;\n          // Compute the sample standard deviation (estimate of the population standard deviation).\n          sd = sqrt(variance);\n          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).\n          sem = sd / sqrt(size);\n          // Compute the degrees of freedom.\n          df = size - 1;\n          // Compute the critical value.\n          critical = tTable[Math.round(df) || 1] || tTable.infinity;\n          // Compute the margin of error.\n          moe = sem * critical;\n          // Compute the relative margin of error.\n          rme = (moe / mean) * 100 || 0;\n\n          _.assign(bench.stats, {\n            'deviation': sd,\n            'mean': mean,\n            'moe': moe,\n            'rme': rme,\n            'sem': sem,\n            'variance': variance\n          });\n\n          // Abort the cycle loop when the minimum sample size has been collected\n          // and the elapsed time exceeds the maximum time allowed per benchmark.\n          // We don't count cycle delays toward the max time because delays may be\n          // increased by browsers that clamp timeouts for inactive tabs. For more\n          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.\n          if (maxedOut) {\n            // Reset the `initCount` in case the benchmark is rerun.\n            bench.initCount = initCount;\n            bench.running = false;\n            done = true;\n            times.elapsed = (now - times.timeStamp) / 1e3;\n          }\n          if (bench.hz != Infinity) {\n            bench.hz = 1 / mean;\n            times.cycle = mean * bench.count;\n            times.period = mean;\n          }\n        }\n        // If time permits, increase sample size to reduce the margin of error.\n        if (queue.length < 2 && !maxedOut) {\n          enqueue();\n        }\n        // Abort the `invoke` cycle when done.\n        event.aborted = done;\n      }\n\n      // Init queue and begin.\n      enqueue();\n      invoke(queue, {\n        'name': 'run',\n        'args': { 'async': async },\n        'queued': true,\n        'onCycle': evaluate,\n        'onComplete': function() { bench.emit('complete'); }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Cycles a benchmark until a run `count` can be established.\n     *\n     * @private\n     * @param {Object} clone The cloned benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function cycle(clone, options) {\n      options || (options = {});\n\n      var deferred;\n      if (clone instanceof Deferred) {\n        deferred = clone;\n        clone = clone.benchmark;\n      }\n      var clocked,\n          cycles,\n          divisor,\n          event,\n          minTime,\n          period,\n          async = options.async,\n          bench = clone._original,\n          count = clone.count,\n          times = clone.times;\n\n      // Continue, if not aborted between cycles.\n      if (clone.running) {\n        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.\n        cycles = ++clone.cycles;\n        clocked = deferred ? deferred.elapsed : clock(clone);\n        minTime = clone.minTime;\n\n        if (cycles > bench.cycles) {\n          bench.cycles = cycles;\n        }\n        if (clone.error) {\n          event = Event('error');\n          event.message = clone.error;\n          clone.emit(event);\n          if (!event.cancelled) {\n            clone.abort();\n          }\n        }\n      }\n      // Continue, if not errored.\n      if (clone.running) {\n        // Compute the time taken to complete last test cycle.\n        bench.times.cycle = times.cycle = clocked;\n        // Compute the seconds per operation.\n        period = bench.times.period = times.period = clocked / count;\n        // Compute the ops per second.\n        bench.hz = clone.hz = 1 / period;\n        // Avoid working our way up to this next time.\n        bench.initCount = clone.initCount = count;\n        // Do we need to do another cycle?\n        clone.running = clocked < minTime;\n\n        if (clone.running) {\n          // Tests may clock at `0` when `initCount` is a small number,\n          // to avoid that we set its count to something a bit higher.\n          if (!clocked && (divisor = divisors[clone.cycles]) != null) {\n            count = floor(4e6 / divisor);\n          }\n          // Calculate how many more iterations it will take to achieve the `minTime`.\n          if (count <= clone.count) {\n            count += Math.ceil((minTime - clocked) / period);\n          }\n          clone.running = count != Infinity;\n        }\n      }\n      // Should we exit early?\n      event = Event('cycle');\n      clone.emit(event);\n      if (event.aborted) {\n        clone.abort();\n      }\n      // Figure out what to do next.\n      if (clone.running) {\n        // Start a new cycle.\n        clone.count = count;\n        if (deferred) {\n          clone.compiled.call(deferred, context, timer);\n        } else if (async) {\n          delay(clone, function() { cycle(clone, options); });\n        } else {\n          cycle(clone);\n        }\n      }\n      else {\n        // Fix TraceMonkey bug associated with clock fallbacks.\n        // For more information see http://bugzil.la/509069.\n        if (support.browser) {\n          runScript(uid + '=1;delete ' + uid);\n        }\n        // We're done.\n        clone.emit('complete');\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Runs the benchmark.\n     *\n     * @memberOf Benchmark\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The benchmark instance.\n     * @example\n     *\n     * // basic usage\n     * bench.run();\n     *\n     * // or with options\n     * bench.run({ 'async': true });\n     */\n    function run(options) {\n      var bench = this,\n          event = Event('start');\n\n      // Set `running` to `false` so `reset()` won't call `abort()`.\n      bench.running = false;\n      bench.reset();\n      bench.running = true;\n\n      bench.count = bench.initCount;\n      bench.times.timeStamp = _.now();\n      bench.emit(event);\n\n      if (!event.cancelled) {\n        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };\n\n        // For clones created within `compute()`.\n        if (bench._original) {\n          if (bench.defer) {\n            Deferred(bench);\n          } else {\n            cycle(bench, options);\n          }\n        }\n        // For original benchmarks.\n        else {\n          compute(bench, options);\n        }\n      }\n      return bench;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Firefox 1 erroneously defines variable and argument names of functions on\n    // the function itself as non-configurable properties with `undefined` values.\n    // The bugginess continues as the `Benchmark` constructor has an argument\n    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,\n    // making it non-writable in the process, unless it is the first property\n    // assigned by for-in loop of `_.assign()`.\n    _.assign(Benchmark, {\n\n      /**\n       * The default options copied by benchmark instances.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'options': {\n\n        /**\n         * A flag to indicate that benchmark cycles will execute asynchronously\n         * by default.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'async': false,\n\n        /**\n         * A flag to indicate that the benchmark clock is deferred.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'defer': false,\n\n        /**\n         * The delay between test cycles (secs).\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'delay': 0.005,\n\n        /**\n         * Displayed by `Benchmark#toString` when a `name` is not available\n         * (auto-generated if absent).\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'id': undefined,\n\n        /**\n         * The default number of times to execute a test on a benchmark's first cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'initCount': 1,\n\n        /**\n         * The maximum time a benchmark is allowed to run before finishing (secs).\n         *\n         * Note: Cycle delays aren't counted toward the maximum time.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'maxTime': 5,\n\n        /**\n         * The minimum sample size required to perform statistical analysis.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minSamples': 5,\n\n        /**\n         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minTime': 0,\n\n        /**\n         * The name of the benchmark.\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'name': undefined,\n\n        /**\n         * An event listener called when the benchmark is aborted.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onAbort': undefined,\n\n        /**\n         * An event listener called when the benchmark completes running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onComplete': undefined,\n\n        /**\n         * An event listener called after each run cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onCycle': undefined,\n\n        /**\n         * An event listener called when a test errors.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onError': undefined,\n\n        /**\n         * An event listener called when the benchmark is reset.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onReset': undefined,\n\n        /**\n         * An event listener called when the benchmark starts running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onStart': undefined\n      },\n\n      /**\n       * Platform object with properties describing things like browser name,\n       * version, and operating system. See [`platform.js`](https://mths.be/platform).\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'platform': context.platform || require('platform') || ({\n        'description': context.navigator && context.navigator.userAgent || null,\n        'layout': null,\n        'product': null,\n        'name': null,\n        'manufacturer': null,\n        'os': null,\n        'prerelease': null,\n        'version': null,\n        'toString': function() {\n          return this.description || '';\n        }\n      }),\n\n      /**\n       * The semantic version number.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type string\n       */\n      'version': '2.1.4'\n    });\n\n    _.assign(Benchmark, {\n      'filter': filter,\n      'formatNumber': formatNumber,\n      'invoke': invoke,\n      'join': join,\n      'runInContext': runInContext,\n      'support': support\n    });\n\n    // Add lodash methods to Benchmark.\n    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {\n      Benchmark[methodName] = _[methodName];\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Benchmark.prototype, {\n\n      /**\n       * The number of times a test was executed.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'count': 0,\n\n      /**\n       * The number of cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The number of executions per second.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'hz': 0,\n\n      /**\n       * The compiled test function.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'compiled': undefined,\n\n      /**\n       * The error object if the test failed.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'error': undefined,\n\n      /**\n       * The test to benchmark.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'fn': undefined,\n\n      /**\n       * A flag to indicate if the benchmark is aborted.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the benchmark is running.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'running': false,\n\n      /**\n       * Compiled into the test and executed immediately **before** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       * @example\n       *\n       * // basic usage\n       * var bench = Benchmark({\n       *   'setup': function() {\n       *     var c = this.count,\n       *         element = document.getElementById('container');\n       *     while (c--) {\n       *       element.appendChild(document.createElement('div'));\n       *     }\n       *   },\n       *   'fn': function() {\n       *     element.removeChild(element.lastChild);\n       *   }\n       * });\n       *\n       * // compiles to something like:\n       * var c = this.count,\n       *     element = document.getElementById('container');\n       * while (c--) {\n       *   element.appendChild(document.createElement('div'));\n       * }\n       * var start = new Date;\n       * while (count--) {\n       *   element.removeChild(element.lastChild);\n       * }\n       * var end = new Date - start;\n       *\n       * // or using strings\n       * var bench = Benchmark({\n       *   'setup': '\\\n       *     var a = 0;\\n\\\n       *     (function() {\\n\\\n       *       (function() {\\n\\\n       *         (function() {',\n       *   'fn': 'a += 1;',\n       *   'teardown': '\\\n       *          }())\\n\\\n       *        }())\\n\\\n       *      }())'\n       * });\n       *\n       * // compiles to something like:\n       * var a = 0;\n       * (function() {\n       *   (function() {\n       *     (function() {\n       *       var start = new Date;\n       *       while (count--) {\n       *         a += 1;\n       *       }\n       *       var end = new Date - start;\n       *     }())\n       *   }())\n       * }())\n       */\n      'setup': _.noop,\n\n      /**\n       * Compiled into the test and executed immediately **after** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'teardown': _.noop,\n\n      /**\n       * An object of stats including mean, margin or error, and standard deviation.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'stats': {\n\n        /**\n         * The margin of error.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'moe': 0,\n\n        /**\n         * The relative margin of error (expressed as a percentage of the mean).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'rme': 0,\n\n        /**\n         * The standard error of the mean.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'sem': 0,\n\n        /**\n         * The sample standard deviation.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'deviation': 0,\n\n        /**\n         * The sample arithmetic mean (secs).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'mean': 0,\n\n        /**\n         * The array of sampled periods.\n         *\n         * @memberOf Benchmark#stats\n         * @type Array\n         */\n        'sample': [],\n\n        /**\n         * The sample variance.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'variance': 0\n      },\n\n      /**\n       * An object of timing data including cycle, elapsed, period, start, and stop.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'times': {\n\n        /**\n         * The time taken to complete the last cycle (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'cycle': 0,\n\n        /**\n         * The time taken to complete the benchmark (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'elapsed': 0,\n\n        /**\n         * The time taken to execute the test once (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'period': 0,\n\n        /**\n         * A timestamp of when the benchmark started (ms).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'timeStamp': 0\n      }\n    });\n\n    _.assign(Benchmark.prototype, {\n      'abort': abort,\n      'clone': clone,\n      'compare': compare,\n      'emit': emit,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'reset': reset,\n      'run': run,\n      'toString': toStringBench\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Deferred.prototype, {\n\n      /**\n       * The deferred benchmark instance.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type Object\n       */\n      'benchmark': null,\n\n      /**\n       * The number of deferred cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The time taken to complete the deferred benchmark (secs).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'elapsed': 0,\n\n      /**\n       * A timestamp of when the deferred benchmark started (ms).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'timeStamp': 0\n    });\n\n    _.assign(Deferred.prototype, {\n      'resolve': resolve\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Event.prototype, {\n\n      /**\n       * A flag to indicate if the emitters listener iteration is aborted.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the default action is cancelled.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'cancelled': false,\n\n      /**\n       * The object whose listeners are currently being processed.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'currentTarget': undefined,\n\n      /**\n       * The return value of the last executed listener.\n       *\n       * @memberOf Benchmark.Event\n       * @type Mixed\n       */\n      'result': undefined,\n\n      /**\n       * The object to which the event was originally emitted.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'target': undefined,\n\n      /**\n       * A timestamp of when the event was created (ms).\n       *\n       * @memberOf Benchmark.Event\n       * @type number\n       */\n      'timeStamp': 0,\n\n      /**\n       * The event type.\n       *\n       * @memberOf Benchmark.Event\n       * @type string\n       */\n      'type': ''\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The default options copied by suite instances.\n     *\n     * @static\n     * @memberOf Benchmark.Suite\n     * @type Object\n     */\n    Suite.options = {\n\n      /**\n       * The name of the suite.\n       *\n       * @memberOf Benchmark.Suite.options\n       * @type string\n       */\n      'name': undefined\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Suite.prototype, {\n\n      /**\n       * The number of benchmarks in the suite.\n       *\n       * @memberOf Benchmark.Suite\n       * @type number\n       */\n      'length': 0,\n\n      /**\n       * A flag to indicate if the suite is aborted.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the suite is running.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'running': false\n    });\n\n    _.assign(Suite.prototype, {\n      'abort': abortSuite,\n      'add': add,\n      'clone': cloneSuite,\n      'emit': emit,\n      'filter': filterSuite,\n      'join': arrayRef.join,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'pop': arrayRef.pop,\n      'push': push,\n      'reset': resetSuite,\n      'run': runSuite,\n      'reverse': arrayRef.reverse,\n      'shift': shift,\n      'slice': slice,\n      'sort': arrayRef.sort,\n      'splice': arrayRef.splice,\n      'unshift': unshift\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Expose Deferred, Event, and Suite.\n    _.assign(Benchmark, {\n      'Deferred': Deferred,\n      'Event': Event,\n      'Suite': Suite\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Add lodash methods as Suite methods.\n    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {\n      var func = _[methodName];\n      Suite.prototype[methodName] = function() {\n        var args = [this];\n        push.apply(args, arguments);\n        return func.apply(_, args);\n      };\n    });\n\n    // Avoid array-like object bugs with `Array#shift` and `Array#splice`\n    // in Firefox < 10 and IE < 9.\n    _.each(['pop', 'shift', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n\n      Suite.prototype[methodName] = function() {\n        var value = this,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return result;\n      };\n    });\n\n    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new\n    // length of the array.\n    Suite.prototype.unshift = function() {\n      var value = this;\n      unshift.apply(value, arguments);\n      return value.length;\n    };\n\n    return Benchmark;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export Benchmark.\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be aliased.\n    define(['lodash', 'platform'], function(_, platform) {\n      return runInContext({\n        '_': _,\n        'platform': platform\n      });\n    });\n  }\n  else {\n    var Benchmark = runInContext();\n\n    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = Benchmark).Benchmark = Benchmark;\n      }\n      // Export for CommonJS support.\n      freeExports.Benchmark = Benchmark;\n    }\n    else {\n      // Export to the global object.\n      root.Benchmark = Benchmark;\n    }\n  }\n}.call(this));\n"},"lineCount":2827}},"error":null,"hash":"b690e427e2faeeeab93432d803df2c4d","cacheData":{"env":{}}}