{"id":"node_modules/replace-printer/lib/write-stream-string-buffer.js","dependencies":[{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\package.json","includedInParent":true,"mtime":1615640902725},{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\package.json","includedInParent":true,"mtime":1615221433113},{"name":"stream","loc":{"line":4,"column":25},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\lib\\write-stream-string-buffer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\stream-browserify\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WriteStreamStringBuffer = void 0;\r\nconst stream_1 = require(\"stream\");\r\nconst noop = () => {\r\n};\r\nclass WriteStreamStringBuffer extends stream_1.Writable {\r\n    constructor(backing, bufferChangeCallback = noop, replaceOrAppendBuffer = 'append', opt) {\r\n        super(Object.assign(Object.assign({}, opt), { decodeStrings: false }));\r\n        this.bufferChangeCallback = bufferChangeCallback;\r\n        this.replaceOrAppendBuffer = replaceOrAppendBuffer;\r\n        this.buffer = '';\r\n        if (replaceOrAppendBuffer != 'replace' && replaceOrAppendBuffer != 'append')\r\n            throw new Error('replaceOrAppendBuffer needs to be either \"replace\" or \"append\" but was ' + replaceOrAppendBuffer);\r\n        this.setDefaultEncoding('utf8');\r\n        // TODO WARNING: The values of .getColorDepth and .isTTY are pulled once and used static after that\r\n        // this could introduce errors if those values change\r\n        // This improves performance by about 25%\r\n        if (typeof backing.getColorDepth == 'function') {\r\n            const colorDepth = backing.getColorDepth();\r\n            this.getColorDepth = () => colorDepth;\r\n        }\r\n        if (typeof backing.isTTY != 'undefined') {\r\n            this.isTTY = backing.isTTY;\r\n        }\r\n    }\r\n    _write(chunk, encoding, callback) {\r\n        if (encoding === 'buffer') {\r\n            callback(new Error(\"can not use buffers\"));\r\n            return;\r\n        }\r\n        if (typeof chunk != 'string') {\r\n            callback(new Error(\"can not process chunk which are of type\" + (typeof chunk)));\r\n            return;\r\n        }\r\n        if (this.replaceOrAppendBuffer == 'append')\r\n            this.buffer += chunk;\r\n        else\r\n            this.buffer = chunk;\r\n        callback();\r\n        this.bufferChangeCallback();\r\n        return true;\r\n    }\r\n    _final(callback) {\r\n        super._final(callback); // this will probably change an internal state of the stream\r\n        return true;\r\n    }\r\n}\r\nexports.WriteStreamStringBuffer = WriteStreamStringBuffer;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/replace-printer/lib/write-stream-string-buffer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"node_modules/replace-printer/lib/write-stream-string-buffer.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WriteStreamStringBuffer = void 0;\r\nconst stream_1 = require(\"stream\");\r\nconst noop = () => {\r\n};\r\nclass WriteStreamStringBuffer extends stream_1.Writable {\r\n    constructor(backing, bufferChangeCallback = noop, replaceOrAppendBuffer = 'append', opt) {\r\n        super(Object.assign(Object.assign({}, opt), { decodeStrings: false }));\r\n        this.bufferChangeCallback = bufferChangeCallback;\r\n        this.replaceOrAppendBuffer = replaceOrAppendBuffer;\r\n        this.buffer = '';\r\n        if (replaceOrAppendBuffer != 'replace' && replaceOrAppendBuffer != 'append')\r\n            throw new Error('replaceOrAppendBuffer needs to be either \"replace\" or \"append\" but was ' + replaceOrAppendBuffer);\r\n        this.setDefaultEncoding('utf8');\r\n        // TODO WARNING: The values of .getColorDepth and .isTTY are pulled once and used static after that\r\n        // this could introduce errors if those values change\r\n        // This improves performance by about 25%\r\n        if (typeof backing.getColorDepth == 'function') {\r\n            const colorDepth = backing.getColorDepth();\r\n            this.getColorDepth = () => colorDepth;\r\n        }\r\n        if (typeof backing.isTTY != 'undefined') {\r\n            this.isTTY = backing.isTTY;\r\n        }\r\n    }\r\n    _write(chunk, encoding, callback) {\r\n        if (encoding === 'buffer') {\r\n            callback(new Error(\"can not use buffers\"));\r\n            return;\r\n        }\r\n        if (typeof chunk != 'string') {\r\n            callback(new Error(\"can not process chunk which are of type\" + (typeof chunk)));\r\n            return;\r\n        }\r\n        if (this.replaceOrAppendBuffer == 'append')\r\n            this.buffer += chunk;\r\n        else\r\n            this.buffer = chunk;\r\n        callback();\r\n        this.bufferChangeCallback();\r\n        return true;\r\n    }\r\n    _final(callback) {\r\n        super._final(callback); // this will probably change an internal state of the stream\r\n        return true;\r\n    }\r\n}\r\nexports.WriteStreamStringBuffer = WriteStreamStringBuffer;\r\n"},"lineCount":50}},"error":null,"hash":"e71a6514fc9c3bf50eaaec58b21cf7ca","cacheData":{"env":{}}}