{"id":"node_modules/replace-printer/lib/replace-printer.js","dependencies":[{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\package.json","includedInParent":true,"mtime":1615640902725},{"name":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\package.json","includedInParent":true,"mtime":1615221433113},{"name":"console","loc":{"line":4,"column":26},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\lib\\replace-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\console-browserify\\index.js"},{"name":"./write-stream-string-buffer","loc":{"line":5,"column":45},"parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\lib\\replace-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\lib\\write-stream-string-buffer.js"},{"name":"process","parent":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\replace-printer\\lib\\replace-printer.js","resolved":"C:\\Users\\Flo\\Projekte\\nd-bezier\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ReplacePrinter = exports.isTTYStream = void 0;\r\nconst console_1 = require(\"console\");\r\nconst write_stream_string_buffer_1 = require(\"./write-stream-string-buffer\");\r\nfunction removeProblematicCharacters(str) {\r\n    // TODO make this function obsolete\r\n    // This function is used to remove characters which interfere with the character line length count\r\n    // to estimate when the terminal will break the line by itself. This number is needed to correctly move the cursor\r\n    // to replace the old replace message.\r\n    // A workaround could be to use the save ASCII Escape sequence, to just get back to the actual start\r\n    // of the replace message: <ESC> 7 (DECSC, save cursor position), <ESC> 8 (DECRC, restore curos).\r\n    return str.replace(/\\t/g, '    ');\r\n}\r\nfunction getLineCountAndLastLineLength(msg, columns) {\r\n    let lineCount = 0;\r\n    let lastLineLength = 0;\r\n    for (const char of msg) {\r\n        // using lastLineLength == columns since the terminal will\r\n        // linebreak even if it is not suggested by a \\n\r\n        if (char == '\\n') {\r\n            lineCount++;\r\n            lastLineLength = 0;\r\n        }\r\n        else if (lastLineLength === columns) {\r\n            lineCount++;\r\n            lastLineLength = 1;\r\n        }\r\n        else {\r\n            lastLineLength += 1;\r\n        }\r\n    }\r\n    return { lineCount, lastLineLength };\r\n}\r\nexports.isTTYStream = (ws) => !!ws.isTTY;\r\nconst CSI = '\\x1b[';\r\nlet lastUsedReplacePrinter = undefined;\r\nclass ReplacePrinter {\r\n    constructor({ outStream = process.stdout, removeLastLinebreak = true } = {}) {\r\n        this.removeLastLineBreak = removeLastLinebreak;\r\n        if (!exports.isTTYStream(outStream))\r\n            throw new Error('outStream needs to be a TTY stream');\r\n        this.outStream = outStream;\r\n        const notice = this.pushBuffers.bind(this);\r\n        this.replaceStreamBuffer = new write_stream_string_buffer_1.WriteStreamStringBuffer(this.outStream, notice, 'replace');\r\n        this.replaceConsole = new console_1.Console(this.replaceStreamBuffer);\r\n        this.continuesStreamBuffer = new write_stream_string_buffer_1.WriteStreamStringBuffer(this.outStream, notice, 'append');\r\n        this.continuesConsole = new console_1.Console(this.continuesStreamBuffer);\r\n        // this.continuesStreamBuffer.buffer = '\\n';\r\n    }\r\n    /**\r\n     * You need to call this function when you want to continue printing with another ReplacePrinter or resume using\r\n     * another logging utility. This function will just append a new line, if the last replace message did not end with\r\n     * one.\r\n     */\r\n    endWithNewLine() {\r\n        const lrm = this.lastReplaceMessage;\r\n        if (lrm && !lrm.endsWith('\\n')) {\r\n            this.outStream.write('\\n');\r\n            // to allow the continues use of the replace printer\r\n            this.lastReplaceMessage += '\\n';\r\n        }\r\n    }\r\n    pushBuffers() {\r\n        // this will append another new line\r\n        if (lastUsedReplacePrinter != undefined && lastUsedReplacePrinter != this) {\r\n            lastUsedReplacePrinter.endWithNewLine();\r\n            lastUsedReplacePrinter = this;\r\n        }\r\n        lastUsedReplacePrinter = this;\r\n        const os = this.outStream;\r\n        let rpb = this.replaceStreamBuffer.buffer;\r\n        // clear buffer to remember that this message was already printed and is now cleaned in the lastReplaceMessage\r\n        this.replaceStreamBuffer.buffer = '';\r\n        // since the buffer is written by a Console there is always a linebreak at the end\r\n        // removing it to have it sit flush on the last line\r\n        if (this.removeLastLineBreak && rpb.endsWith('\\n'))\r\n            rpb = rpb.slice(0, rpb.endsWith('\\r\\n') ? -2 : -1);\r\n        const clearedMessage = removeProblematicCharacters(rpb);\r\n        const replaceBuffer = clearedMessage.length == 0 ? this.lastReplaceMessage : clearedMessage;\r\n        let continuesBuffer = this.continuesStreamBuffer.buffer;\r\n        // clear the buffer to not reprint the message since it is now already in the output buffer\r\n        this.continuesStreamBuffer.buffer = '';\r\n        if (continuesBuffer.length > 0 && !continuesBuffer.endsWith('\\n'))\r\n            continuesBuffer += '\\n';\r\n        let write = '';\r\n        // clear the space the last replace message took\r\n        if (this.lastReplaceMessage != undefined) {\r\n            const measurements = getLineCountAndLastLineLength(this.lastReplaceMessage, os.columns);\r\n            const rows = measurements.lineCount;\r\n            // clearing last printed replaceable part\r\n            // move the cursor to the start of the line\r\n            write += CSI + '1G';\r\n            // move the cursor up lines\r\n            write += rows > 0 ? CSI + rows + 'F' : '';\r\n            // clear all characters following\r\n            write += CSI + '0J';\r\n        }\r\n        this.lastReplaceMessage = replaceBuffer;\r\n        write += continuesBuffer;\r\n        write += replaceBuffer;\r\n        // printing static and replaceable console output\r\n        os.write(write);\r\n    }\r\n}\r\nexports.ReplacePrinter = ReplacePrinter;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/replace-printer/lib/replace-printer.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}}],"sources":{"node_modules/replace-printer/lib/replace-printer.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ReplacePrinter = exports.isTTYStream = void 0;\r\nconst console_1 = require(\"console\");\r\nconst write_stream_string_buffer_1 = require(\"./write-stream-string-buffer\");\r\nfunction removeProblematicCharacters(str) {\r\n    // TODO make this function obsolete\r\n    // This function is used to remove characters which interfere with the character line length count\r\n    // to estimate when the terminal will break the line by itself. This number is needed to correctly move the cursor\r\n    // to replace the old replace message.\r\n    // A workaround could be to use the save ASCII Escape sequence, to just get back to the actual start\r\n    // of the replace message: <ESC> 7 (DECSC, save cursor position), <ESC> 8 (DECRC, restore curos).\r\n    return str.replace(/\\t/g, '    ');\r\n}\r\nfunction getLineCountAndLastLineLength(msg, columns) {\r\n    let lineCount = 0;\r\n    let lastLineLength = 0;\r\n    for (const char of msg) {\r\n        // using lastLineLength == columns since the terminal will\r\n        // linebreak even if it is not suggested by a \\n\r\n        if (char == '\\n') {\r\n            lineCount++;\r\n            lastLineLength = 0;\r\n        }\r\n        else if (lastLineLength === columns) {\r\n            lineCount++;\r\n            lastLineLength = 1;\r\n        }\r\n        else {\r\n            lastLineLength += 1;\r\n        }\r\n    }\r\n    return { lineCount, lastLineLength };\r\n}\r\nexports.isTTYStream = (ws) => !!ws.isTTY;\r\nconst CSI = '\\x1b[';\r\nlet lastUsedReplacePrinter = undefined;\r\nclass ReplacePrinter {\r\n    constructor({ outStream = process.stdout, removeLastLinebreak = true } = {}) {\r\n        this.removeLastLineBreak = removeLastLinebreak;\r\n        if (!exports.isTTYStream(outStream))\r\n            throw new Error('outStream needs to be a TTY stream');\r\n        this.outStream = outStream;\r\n        const notice = this.pushBuffers.bind(this);\r\n        this.replaceStreamBuffer = new write_stream_string_buffer_1.WriteStreamStringBuffer(this.outStream, notice, 'replace');\r\n        this.replaceConsole = new console_1.Console(this.replaceStreamBuffer);\r\n        this.continuesStreamBuffer = new write_stream_string_buffer_1.WriteStreamStringBuffer(this.outStream, notice, 'append');\r\n        this.continuesConsole = new console_1.Console(this.continuesStreamBuffer);\r\n        // this.continuesStreamBuffer.buffer = '\\n';\r\n    }\r\n    /**\r\n     * You need to call this function when you want to continue printing with another ReplacePrinter or resume using\r\n     * another logging utility. This function will just append a new line, if the last replace message did not end with\r\n     * one.\r\n     */\r\n    endWithNewLine() {\r\n        const lrm = this.lastReplaceMessage;\r\n        if (lrm && !lrm.endsWith('\\n')) {\r\n            this.outStream.write('\\n');\r\n            // to allow the continues use of the replace printer\r\n            this.lastReplaceMessage += '\\n';\r\n        }\r\n    }\r\n    pushBuffers() {\r\n        // this will append another new line\r\n        if (lastUsedReplacePrinter != undefined && lastUsedReplacePrinter != this) {\r\n            lastUsedReplacePrinter.endWithNewLine();\r\n            lastUsedReplacePrinter = this;\r\n        }\r\n        lastUsedReplacePrinter = this;\r\n        const os = this.outStream;\r\n        let rpb = this.replaceStreamBuffer.buffer;\r\n        // clear buffer to remember that this message was already printed and is now cleaned in the lastReplaceMessage\r\n        this.replaceStreamBuffer.buffer = '';\r\n        // since the buffer is written by a Console there is always a linebreak at the end\r\n        // removing it to have it sit flush on the last line\r\n        if (this.removeLastLineBreak && rpb.endsWith('\\n'))\r\n            rpb = rpb.slice(0, rpb.endsWith('\\r\\n') ? -2 : -1);\r\n        const clearedMessage = removeProblematicCharacters(rpb);\r\n        const replaceBuffer = clearedMessage.length == 0 ? this.lastReplaceMessage : clearedMessage;\r\n        let continuesBuffer = this.continuesStreamBuffer.buffer;\r\n        // clear the buffer to not reprint the message since it is now already in the output buffer\r\n        this.continuesStreamBuffer.buffer = '';\r\n        if (continuesBuffer.length > 0 && !continuesBuffer.endsWith('\\n'))\r\n            continuesBuffer += '\\n';\r\n        let write = '';\r\n        // clear the space the last replace message took\r\n        if (this.lastReplaceMessage != undefined) {\r\n            const measurements = getLineCountAndLastLineLength(this.lastReplaceMessage, os.columns);\r\n            const rows = measurements.lineCount;\r\n            // clearing last printed replaceable part\r\n            // move the cursor to the start of the line\r\n            write += CSI + '1G';\r\n            // move the cursor up lines\r\n            write += rows > 0 ? CSI + rows + 'F' : '';\r\n            // clear all characters following\r\n            write += CSI + '0J';\r\n        }\r\n        this.lastReplaceMessage = replaceBuffer;\r\n        write += continuesBuffer;\r\n        write += replaceBuffer;\r\n        // printing static and replaceable console output\r\n        os.write(write);\r\n    }\r\n}\r\nexports.ReplacePrinter = ReplacePrinter;\r\n"},"lineCount":108}},"error":null,"hash":"b2dbd13e0c18ca13e08e02e9e5c4de0a","cacheData":{"env":{}}}